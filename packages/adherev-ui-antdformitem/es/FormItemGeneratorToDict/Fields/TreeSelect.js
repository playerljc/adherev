import"core-js/modules/es.array.filter.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/es.string.ends-with.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.number.constructor.js";import{__assign}from"tslib";import Util from"@baifendian/adherev-util";import Dict from"@baifendian/adherev-util-dict";import TreeMulitSelectFormItem from"../TreeMulitSelectFormItem/TreeMulitSelectFormItem";import TreeSelectFormItem from"../TreeSelectFormItem/TreeSelectFormItem";var FormItemComponents={},getComponentPropsOption=Util._util.getComponentPropsOption;export default function(){var e=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("Tree")}),t=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("DynamicTree")});return FormItemComponents.TreeSelectLeafFormItem={name:"TreeSelectLeafFormItem",props:__assign({},TreeSelectFormItem.props),computed:{targetDataSource:function(){var e=JSON.parse(JSON.stringify(this.dataSource));return function t(e){(e||[]).forEach(function(e){"leaf"in e&&e.leaf?e.disabled=!1:e.disabled=!0,t(e.children)})}(e),e}},render:function(e){return e(TreeSelectFormItem,{props:__assign(__assign({},this.$props),{dataSource:this.targetDataSource}),attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents.TreeSelectLeafMulitFormItem={name:"TreeSelectLeafMulitFormItem",props:getComponentPropsOption(TreeMulitSelectFormItem),computed:{targetDataSource:function(){var e=JSON.parse(JSON.stringify(this.dataSource));return function t(e){(e||[]).forEach(function(e){"leaf"in e&&e.leaf?e.disabled=!1:e.disabled=!0,t(e.children)})}(e),e}},render:function(e){return e(TreeMulitSelectFormItem,{props:__assign(__assign({},this.$props),{dataSource:this.targetDataSource}),attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},e.forEach(function(t){FormItemComponents["".concat(t,"FormItem")]={name:"".concat(t,"FormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectFormItem.props.treeSelectProps,value:TreeSelectFormItem.props.value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(TreeSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(t,"LeafFormItem")]={name:"".concat(t,"LeafFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:FormItemComponents.TreeSelectLeafFormItem.props.treeSelectProps,value:FormItemComponents.TreeSelectLeafFormItem.props.value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(FormItemComponents.TreeSelectLeafFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(t,"MulitFormItem")]={name:"".concat(t,"MulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:getComponentPropsOption(TreeMulitSelectFormItem).treeSelectProps,value:getComponentPropsOption(TreeMulitSelectFormItem).value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(TreeMulitSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(t,"LeafMulitFormItem")]={name:"".concat(t,"LeafMulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:FormItemComponents.TreeSelectLeafMulitFormItem.props.treeSelectProps,value:FormItemComponents.TreeSelectLeafMulitFormItem.props.value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(FormItemComponents.TreeSelectLeafMulitFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}}}),t.forEach(function(o){FormItemComponents["".concat(o,"FormItem")]={name:"".concat(o,"FormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectFormItem.props.treeSelectProps,value:TreeSelectFormItem.props.value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[o].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[o].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(TreeSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(o,"LeafFormItem")]={name:"".concat(o,"LeafFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:FormItemComponents.TreeSelectLeafFormItem.props.treeSelectProps,value:FormItemComponents.TreeSelectLeafFormItem.props.value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[o].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[o].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(FormItemComponents.TreeSelectLeafFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(o,"MulitFormItem")]={name:"".concat(o,"MulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:getComponentPropsOption(TreeMulitSelectFormItem).treeSelectProps,value:getComponentPropsOption(TreeMulitSelectFormItem).value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[o].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[o].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(TreeMulitSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(o,"LeafMulitFormItem")]={name:"".concat(o,"LeafMulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:FormItemComponents.TreeSelectLeafMulitFormItem.props.treeSelectProps,value:FormItemComponents.TreeSelectLeafMulitFormItem.props.value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[o].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[o].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(FormItemComponents.TreeSelectLeafMulitFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}}}),FormItemComponents}
//# sourceMappingURL=TreeSelect.js.map
