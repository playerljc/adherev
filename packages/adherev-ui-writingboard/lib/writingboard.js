"use strict";require("core-js/modules/es.object.define-property.js"),require("core-js/modules/es.number.constructor.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/es.map.js"),require("core-js/modules/es.object.to-string.js"),require("core-js/modules/es.string.iterator.js"),require("core-js/modules/esnext.map.delete-all.js"),require("core-js/modules/esnext.map.every.js"),require("core-js/modules/esnext.map.filter.js"),require("core-js/modules/esnext.map.find.js"),require("core-js/modules/esnext.map.find-key.js"),require("core-js/modules/esnext.map.includes.js"),require("core-js/modules/esnext.map.key-of.js"),require("core-js/modules/esnext.map.map-keys.js"),require("core-js/modules/esnext.map.map-values.js"),require("core-js/modules/esnext.map.merge.js"),require("core-js/modules/esnext.map.reduce.js"),require("core-js/modules/esnext.map.some.js"),require("core-js/modules/esnext.map.update.js"),require("core-js/modules/web.dom-collections.iterator.js"),Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("tslib"),debounce_1=tslib_1.__importDefault(require("lodash/debounce")),resize_observer_1=require("@juggle/resize-observer"),types_1=require("./types"),selectorPrefix="adherev-ui-writingboard",BackTopAnimation={name:"adv-writingboard",props:{defaultMode:{type:String,default:types_1.Mode.FREE},defaultStrokeStyle:{type:String,default:"#000"},defaultLineWidth:{type:Number,default:2},resizeTime:{type:Number,default:300}},data:{$stack:[],$ctx:null,$ro:null,$config:null,$curShape:null,$lineWidth:null,$strokeStyle:null,$startPoint:null,$prePoint:null,$stackIndex:0},methods:{drawStack:function(){for(var t=0;t<this.$data.$stack.current.length;t++){var e=this.$data.$stack[t];this.$data.$config.current.get(e.shape).drawStack(e)}},style:function(t){var e=t.lineWidth,t=t.strokeStyle;this.$data.$ctx.lineWidth=e,this.$data.$ctx.strokeStyle=t,this.$data.$ctx.lineCap="round",this.$data.$ctx.lineJoin="round"},triangle:function(t){var e=t.startPoint,i=t.targetPoint,a=this.getPoint({startPoint:e,targetPoint:i}),t=Math.abs(i.x-e.x),e=Math.abs(i.y-e.y);return[{x:a.x,y:a.y+e},{x:a.x+t/2,y:a.y},{x:a.x+t,y:a.y+e}]},devicePointToCanvasPoint:function(t){var e=t.clientX,i=t.clientY,t=this.$refs.canvasRef.getBoundingClientRect();return{x:e-t.x,y:i-t.y}},getDistanceByBetweenPoint:function(t){var e=t.p1,i=t.p2,a=e.x,t=e.y,e=i.x,i=i.y;return Math.sqrt(Math.pow(e-a,2)+Math.pow(i-t,2))},getPoint:function(t){var e=t.startPoint,t=t.targetPoint;return t.x<=e.x&&t.y<=e.y?t:t.x<=e.x&&t.y>=e.y?{x:t.x,y:e.y}:t.x>=e.x&&t.y<=e.y?{x:e.x,y:t.y}:t.x>=e.x&&t.y>=e.y?e:void 0},draw:function(t){var e=t.sourcePoint,t=t.targetPoint;this.$data.$config.get(this.$data.$curShape).draw({sourcePoint:e,targetPoint:t})},onMousemove:function(t){this.move(t)},onTouchmove:function(t){this.move(tslib_1.__assign(tslib_1.__assign({},t),{clientX:t.targetTouches[0].clientX,clientY:t.targetTouches[0].clientY}))},onMouseup:function(t){this.end(t)},onTouchend:function(t){this.end(tslib_1.__assign(tslib_1.__assign({},t),{clientX:t.changedTouches[0].clientX,clientY:t.changedTouches[0].clientY}))},start:function(t){var e=t.clientX,t=t.clientY;this.$data.$startPoint=this.$data.$prePoint=this.devicePointToCanvasPoint({clientX:e,clientY:t}),this.$refs.containerRef.addEventListener("mousemove",this.onMousemove),this.$refs.containerRef.addEventListener("mouseup",this.onMouseup),this.$refs.containerRef.addEventListener("touchmove",this.onTouchmove),this.$refs.containerRef.addEventListener("touchend",this.onTouchend)},move:function(t){var e=t.clientX,t=t.clientY,t=this.devicePointToCanvasPoint({clientX:e,clientY:t});this.draw({sourcePoint:this.$data.$prePoint.current,targetPoint:t}),this.$data.$prePoint=t},end:function(t){var e=t.clientX,t=t.clientY,e=this.devicePointToCanvasPoint({clientX:e,clientY:t});null!==(t=this.$data.$config.get(this.$data.$curShape))&&void 0!==t&&t.mouseup(e),this.$data.$startPoint=null,this.$data.$prePoint=null,this.$refs.containerRef.removeEventListener("mousemove",this.onMousemove),this.$refs.containerRef.removeEventListener("mouseup",this.onMouseup),this.$refs.containerRef.removeEventListener("touchmove",this.onTouchmove),this.$refs.containerRef.removeEventListener("touchend",this.onTouchend)},clear:function(){this.$data.$ctx.clearRect(0,0,this.$refs.canvasRef.width,this.$refs.canvasRef.height),this.$data.$prePoint=this.$data.$startPoint=null,this.$data.$stack=[],this.$data.$stackIndex=0},setMode:function(t){this.$data.$curShape=t},setStrokeStyle:function(t){this.$data.$strokeStyle=t},setLineWidth:function(t){this.$data.$lineWidth=t},toDataURL:function(){this.$refs.canvasRef.toDataURL("image/png",1)}},beforeCreate:function(){this.$data.$curShape=this.defaultMode,this.$data.$lineWidth=this.defaultLineWidth,this.$data.$strokeStyle=this.defaultStrokeStyle,this.$data.$config=new Map([[types_1.Mode.FREE,{draw:function(t){var e=t.sourcePoint,t=t.targetPoint;this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(e.x,e.y),this.$data.$ctx.lineTo(t.x,t.y),this.$data.$stack.push({shape:this.$data.$curShape,sourcePoint:e,targetPoint:t}),this.style({lineWidth:this.$data.$lineWidth,strokeStyle:this.$data.$strokeStyle}),this.$data.$ctx.stroke()},drawStack:function(t){this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(t.sourcePoint.x,t.sourcePoint.y),this.$data.$ctx.lineTo(t.targetPoint.x,t.targetPoint.y),this.style({lineWidth:t.lineWidth,strokeStyle:t.strokeStyle}),this.$data.$ctx.stroke()},mouseup:function(t){this.draw({sourcePoint:this.$data.$prePoint,targetPoint:t})}}],[types_1.Mode.LINE,{draw:function(t){t=t.targetPoint;this.$data.$ctx.clearRect(0,0,this.$refs.canvasRef.width,this.$refs.canvasRef.height),this.drawStack(),this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(this.$data.$startPoint.x,this.$data.$startPoint.y),this.$data.$ctx.lineTo(t.x,t.y),this.style({lineWidth:this.$data.$lineWidth,strokeStyle:this.$data.$strokeStyle}),this.$data.$ctx.stroke()},drawStack:function(t){this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(t.sourcePoint.x,t.sourcePoint.y),this.$data.$ctx.lineTo(t.targetPoint.x,t.targetPoint.y),this.style({lineWidth:t.lineWidth,strokeStyle:t.strokeStyle}),this.$data.$ctx.stroke()},mouseup:function(t){this.$data.$stack.push({shape:this.$data.$curShape,lineWidth:this.$data.$ctx.lineWidth,strokeStyle:this.$data.$ctx.strokeStyle,sourcePoint:this.$data.$startPoint,targetPoint:t})}}],[types_1.Mode.RECTANGLE,{draw:function(t){var e=t.targetPoint;this.$data.$ctx.clearRect(0,0,this.$refs.canvasRef.width,this.$refs.canvasRef.height),this.drawStack(),this.$data.$ctx.beginPath();t=this.getPoint({startPoint:this.$data.$startPoint,targetPoint:e});this.$data.$ctx.rect(t.x,t.y,Math.abs(e.x-this.$data.$startPoint.x),Math.abs(e.y-this.$data.$startPoint.y)),this.style({lineWidth:this.$data.$lineWidth,strokeStyle:this.$data.$strokeStyle}),this.$data.$ctx.stroke()},drawStack:function(t){this.$data.$ctx.beginPath(),this.$data.$ctx.rect(t.x,t.y,t.width,t.height),this.style({lineWidth:t.lineWidth,strokeStyle:t.strokeStyle}),this.$data.$ctx.stroke()},mouseup:function(t){var e=this.getPoint({startPoint:this.$data.$startPoint,targetPoint:t});this.$data.$stack.push({shape:this.$data.$curShape,lineWidth:this.$data.$ctx.lineWidth,strokeStyle:this.$data.$ctx.strokeStyle,x:e.x,y:e.y,width:Math.abs(t.x-this.$data.$startPoint.x),height:Math.abs(t.y-this.$data.$startPoint.y)})}}],[types_1.Mode.CIRCLE,{draw:function(t){var e=t.targetPoint;this.$data.$ctx.clearRect(0,0,this.$refs.canvasRef.width,this.$refs.canvasRef.height),this.drawStack(),this.$data.$ctx.beginPath();t=this.getPoint({startPoint:this.$data.$startPoint,targetPoint:e}),e=this.getDistanceByBetweenPoint({p2:e,p1:this.$data.$startPoint});this.$data.$ctx.ellipse(t.x,t.y,e,e,45*Math.PI/180,0,2*Math.PI),this.style({lineWidth:this.$data.$lineWidth,strokeStyle:this.$data.$strokeStyle}),this.$data.$ctx.stroke()},drawStack:function(t){this.$data.$ctx.beginPath(),this.$data.$ctx.ellipse(t.x,t.y,t.radiusX,t.radiusY,t.rotation,t.startAngle,t.endAngle),this.style({lineWidth:t.lineWidth,strokeStyle:t.strokeStyle}),this.$data.$ctx.stroke()},mouseup:function(t){var e=this.getPoint({startPoint:this.$data.$startPoint,targetPoint:t}),t=this.getDistanceByBetweenPoint({p2:t,p1:this.$data.$startPoint});this.$data.$stack.push({shape:this.$data.$curShape,lineWidth:this.$data.$ctx.lineWidth,strokeStyle:this.$data.$ctx.strokeStyle,x:e.x,y:e.y,radiusX:t,radiusY:t,rotation:45*Math.PI/180,startAngle:0,endAngle:2*Math.PI})}}],[types_1.Mode.TRIANGLE,{draw:function(t){t=t.targetPoint;this.$data.$ctx.clearRect(0,0,this.$refs.canvasRef.width,this.$refs.canvasRef.height),this.drawStack(),this.$data.$ctx.beginPath();t=this.triangle({startPoint:this.$data.$startPoint,targetPoint:t});this.$data.$ctx.moveTo(t[0].x,t[0].y),this.$data.$ctx.lineTo(t[1].x,t[1].y),this.$data.$ctx.lineTo(t[2].x,t[2].y),this.$data.$ctx.closePath(),this.style({lineWidth:this.$data.$lineWidth,strokeStyle:this.$data.$strokeStyle}),this.$data.$ctx.stroke()},drawStack:function(t){this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(t.points[0].x,t.points[0].y),this.$data.$ctx.lineTo(t.points[1].x,t.points[1].y),this.$data.$ctx.lineTo(t.points[2].x,t.points[2].y),this.$data.$ctx.closePath(),this.style({lineWidth:t.lineWidth,strokeStyle:t.strokeStyle}),this.$data.$ctx.stroke()},mouseup:function(t){t=this.triangle({startPoint:this.$data.$startPoint,targetPoint:t});this.$data.$stack.push({shape:this.$data.$curShape,lineWidth:this.$data.$ctx.lineWidth,strokeStyle:this.$data.$ctx.strokeStyle,points:t})}}],[types_1.Mode.RUBBER,{draw:function(t){var e=t.sourcePoint,t=t.targetPoint;this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(e.x,e.y),this.$data.$ctx.lineTo(t.x,t.y),this.$data.$stack.push({shape:this.$data.$curShape,sourcePoint:e,targetPoint:t}),this.$data.$ctx.lineWidth=15,this.$data.$ctx.strokeStyle="#fff",this.$data.$ctx.lineCap="round",this.$data.$ctx.lineJoin="round",this.$data.$ctx.stroke()},drawStack:function(t){this.$data.$ctx.beginPath(),this.$data.$ctx.moveTo(t.sourcePoint.x,t.sourcePoint.y),this.$data.$ctx.lineTo(t.targetPoint.x,t.targetPoint.y),this.$data.$ctx.lineWidth=15,this.$data.$ctx.strokeStyle="#fff",this.$data.$ctx.lineCap="round",this.$data.$ctx.lineJoin="round",this.$data.$ctx.stroke()},mouseup:function(t){this.draw({sourcePoint:this.$data.$prePoint,targetPoint:t})}}]])},mounted:function(){var t,e=this;this.$data.$ctx=this.$refs.canvasRef.getContext("2d");var i=debounce_1.default(function(){e.$refs.canvasRef.width=e.$refs.offsetWidth,e.$refs.canvasRef.height=e.$refs.offsetHeight,e.$data.$ctx.clearRect(0,0,e.$refs.canvasRef.width,e.$refs.canvasRef.current.height),e.drawStack()},this.resizeTime);this.$data.$ro=new resize_observer_1.ResizeObserver(i),null!==(i=(t=this.$data.$ro).observe)&&void 0!==i&&i.call(t,document.body),this.$refs.containerRef.addEventListener("mousedown",this.onMousedown),this.$refs.containerRef.addEventListener("touchstart",this.onTouchstart)},beforeDestroy:function(){this.$refs.containerRef.removeEventListener("mousedown",this.onMousedown),this.$refs.containerRef.removeEventListener("touchstart",this.onTouchstart)},render:function(t){return t("div",{ref:"containerRef",class:selectorPrefix},[t("canvas",{ref:"canvasRef"})])}};exports.default=BackTopAnimation;
//# sourceMappingURL=writingboard.js.map
