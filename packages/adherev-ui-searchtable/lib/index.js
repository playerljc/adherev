"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ant_design_vue_1 = require("ant-design-vue");
// import VueDraggableResizable from 'vue-draggable-resizable';
var searchform_1 = (0, tslib_1.__importDefault)(require("./searchform"));
var searchformrow_1 = (0, tslib_1.__importDefault)(require("./searchformrow"));
var searchformlabel_1 = (0, tslib_1.__importDefault)(require("./searchformlabel"));
var searchformvalue_1 = (0, tslib_1.__importDefault)(require("./searchformvalue"));
var ColumnSetting_1 = (0, tslib_1.__importDefault)(require("./Extension/ColumnSetting"));
var TableDensitySetting_1 = (0, tslib_1.__importDefault)(require("./Extension/TableDensitySetting"));
var searchtable_1 = (0, tslib_1.__importStar)(require("./searchtable"));
var searchtableimplement_1 = (0, tslib_1.__importDefault)(require("./searchtableimplement"));
var adherev_util_1 = (0, tslib_1.__importDefault)(require("@baifendian/adherev-util"));
var _a = adherev_util_1.default._util, withInstall = _a.withInstall, withVue = _a.withVue;
searchtable_1.default.isUse = function () { return true; };
searchtable_1.default.use = function (Vue) {
    Vue.use(searchtable_1.default.SearchForm);
    Vue.use(searchtable_1.default.SearchFormRow);
    Vue.use(searchtable_1.default.SearchFormLabel);
    Vue.use(searchtable_1.default.SearchFormValue);
    Vue.use(searchtable_1.default.ColumnSetting);
    Vue.use(searchtable_1.default.TableDensitySetting);
    Vue.use(ant_design_vue_1.Table);
    Vue.use(ant_design_vue_1.Button);
    Vue.use(ant_design_vue_1.Popover);
    Vue.use(ant_design_vue_1.Checkbox);
    // Vue.component('vue-draggable-resizable', VueDraggableResizable);
    withVue(Vue, 'SearchTable', searchtable_1.default);
};
searchtable_1.default.SearchForm = withInstall(searchform_1.default);
searchtable_1.default.SearchFormRow = withInstall(searchformrow_1.default);
searchtable_1.default.SearchFormLabel = withInstall(searchformlabel_1.default);
searchtable_1.default.SearchFormValue = withInstall(searchformvalue_1.default);
searchtable_1.default.ColumnSetting = withInstall(ColumnSetting_1.default);
searchtable_1.default.TableDensitySetting = withInstall(TableDensitySetting_1.default);
searchtable_1.default.SearchTableImplement = searchtableimplement_1.default;
searchtable_1.default.NUMBER_GENERATOR_RULE_ALONE = searchtable_1.NUMBER_GENERATOR_RULE_ALONE;
searchtable_1.default.NUMBER_GENERATOR_RULE_CONTINUITY = searchtable_1.NUMBER_GENERATOR_RULE_CONTINUITY;
searchtable_1.default.ROW_SELECTION_NORMAL_MODE = searchtable_1.ROW_SELECTION_NORMAL_MODE;
searchtable_1.default.ROW_SELECTION_CONTINUOUS_MODE = searchtable_1.ROW_SELECTION_CONTINUOUS_MODE;
exports.default = searchtable_1.default;
//# sourceMappingURL=index.js.map