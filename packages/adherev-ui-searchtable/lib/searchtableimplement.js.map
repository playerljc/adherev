{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.promise.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar vue_1 = tslib_1.__importDefault(require(\"vue\")); // @ts-ignore\n\n\nvar vuexgenerator_1 = require(\"@ctsj/vuexgenerator\");\n\nvar searchtable_1 = tslib_1.__importStar(require(\"./searchtable\"));\n\nvar selectorPrefix = 'adherev-ui-searchtableimplement';\n\nexports.default = function (serviceName) {\n  return vue_1.default.extend({\n    mixins: serviceName ? [searchtable_1.default, vuexgenerator_1.cleanMixin([serviceName])] : [searchtable_1.default],\n    data: function data() {\n      var _a;\n\n      return tslib_1.__assign(tslib_1.__assign({}, this.getParams()), (_a = {}, _a[this.getOrderFieldProp()] = this.getOrderFieldValue(), _a[this.getOrderProp()] = this.getOrderPropValue() || 'descend', // 查询参数\n      _a.searchParams = tslib_1.__assign({}, this.getParams()), _a.selectedRowKeys = [], _a));\n    },\n    computed: serviceName ? tslib_1.__assign({}, vuexgenerator_1.mapState([serviceName])) : {},\n    methods: Object.assign({\n      /**\n       * getFetchListPropName\n       * @override\n       * @description - 获取调用列表接口的函数名\n       */\n      getFetchListPropName: function getFetchListPropName() {\n        return '';\n      },\n\n      /**\n       * getFetchListPropNameToFirstUpper\n       * @override\n       * @description - 获取调用列表接口的函数名首字母大写\n       * @return string\n       */\n      getFetchListPropNameToFirstUpper: function getFetchListPropNameToFirstUpper() {\n        var fetchListPropName = this.getFetchListPropName();\n\n        if (fetchListPropName.length > 1) {\n          return \"\" + fetchListPropName.charAt(0).toUpperCase() + fetchListPropName.substring(1);\n        }\n\n        return fetchListPropName;\n      },\n      // ------------ 不需要重写(override)的方法 start ------------------\n\n      /**\n       * onSelectChange\n       * @description - onSelectChange\n       * @param property\n       * @param v\n       */\n      onSelectChange: function onSelectChange(property, v) {\n        this[property] = v;\n      },\n\n      /**\n       * onInputChange\n       * @description - onInputChange\n       * @param property\n       * @param e\n       */\n      onInputChange: function onInputChange(property, e) {\n        this[property] = e.target.value.trim();\n      },\n\n      /**\n       * onDateTimeRangeChange\n       * @description - onDateTimeRangeChange\n       * @param propertys\n       * @param moments\n       */\n      onDateTimeRangeChange: function onDateTimeRangeChange(propertys, moments) {\n        this[propertys[0]] = moments && moments.length ? moments[0] : null;\n        this[propertys[1]] = moments && moments.length ? moments[1] : null;\n      },\n      // ------------ 不需要重写(override)的方法 end ------------------\n\n      /**\n       * getParams\n       * @override\n       * @description - 获取查询参数对象\n       */\n      getParams: function getParams() {\n        return {};\n      },\n\n      /**\n       * getServiceName\n       * @override\n       * @description - 获取接口服务的model名称\n       */\n      getServiceName: function getServiceName() {\n        return serviceName;\n      },\n\n      /**\n       * getFetchDataParams\n       * @override\n       * @description - 获取调用数据接口的参数\n       */\n      getFetchDataParams: function getFetchDataParams() {\n        return {};\n      },\n\n      /**\n       * isShowNumber\n       * @description - 是否线上序号列\n       * @override\n       * @return {boolean}\n       */\n      isShowNumber: function isShowNumber() {\n        return true;\n      },\n\n      /**\n       * getNumberGeneratorRule\n       * @override\n       * @description - 表格序号列的生成规则\n       */\n      getNumberGeneratorRule: function getNumberGeneratorRule() {\n        return searchtable_1.NUMBER_GENERATOR_RULE_CONTINUITY;\n      },\n\n      /**\n       * getTableNumberColumnWidth\n       * @override\n       * @description - 表格序号列的宽度\n       */\n      getTableNumberColumnWidth: function getTableNumberColumnWidth() {\n        return 80;\n      },\n\n      /**\n       * getRowKey\n       * @override\n       * @description - 数据的主键\n       */\n      getRowKey: function getRowKey() {\n        return 'id';\n      },\n\n      /**\n       * getDataKey\n       * @description - 获取数据的key\n       * @protected\n       */\n      getDataKey: function getDataKey() {\n        return 'list';\n      },\n\n      /**\n       * getTotalKey\n       * @description - 获取total的key\n       * @protected\n       */\n      getTotalKey: function getTotalKey() {\n        return 'totalCount';\n      },\n\n      /**\n       * getData\n       * @description - Table的数据(Table的dataSource字段)\n       * @override\n       * @return {Array}\n       */\n      getData: function getData() {\n        return this[\"\" + serviceName + this.getFetchListPropNameToFirstUpper()][this.getDataKey()];\n      },\n\n      /**\n       * getTotal\n       * @description - Table数据的总条数\n       * @override\n       */\n      getTotal: function getTotal() {\n        return this[\"\" + serviceName + this.getFetchListPropNameToFirstUpper()][this.getTotalKey()];\n      },\n\n      /**\n       * getRowSelection\n       * @override\n       * @description - 获取表格行选择对象\n       */\n      getRowSelection: function getRowSelection() {\n        var _this = this;\n\n        return {\n          selectedRowKeys: this.selectedRowKeys,\n          onChange: function onChange(selectedRowKeys) {\n            _this.selectedRowKeys = selectedRowKeys;\n          }\n        };\n      },\n\n      /**\n       * renderSearchForm\n       * @override\n       * @description - 渲染Table查询的表单\n       */\n      renderSearchForm: function renderSearchForm(h) {\n        return null;\n      },\n      renderSearchTableImplementInner: function renderSearchTableImplementInner(h) {\n        var innerVNode = this.renderSearchTableInner(h);\n        return h(\"div\", {\n          \"ref\": \"innerWrapRef\",\n          \"class\": selectorPrefix + \"-tablewrapper\"\n        }, [innerVNode]);\n      },\n\n      /**\n       * renderInner\n       * @override\n       * @description - 渲染主体\n       */\n      renderInner: function renderInner(h) {\n        return this.renderSearchTableImplementInner(h);\n      },\n\n      /**\n       * renderSearchFooterItems\n       * @description - 渲染表格的工具栏\n       * @override\n       */\n      renderSearchFooterItems: function renderSearchFooterItems() {\n        return [];\n      },\n\n      /**\n       * getOrderFieldProp\n       * @description - 获取排序字段\n       * @override\n       */\n      getOrderFieldProp: function getOrderFieldProp() {\n        return 'orderField';\n      },\n\n      /**\n       * getOrderFieldValue\n       * @description - 获取默认排序字段的值\n       * @override\n       * @protected\n       */\n      getOrderFieldValue: function getOrderFieldValue() {\n        return '';\n      },\n\n      /**\n       * getOrderProp\n       * @description - 获取排序方式\n       */\n      getOrderProp: function getOrderProp() {\n        return 'order';\n      },\n\n      /**\n       * getOrderPropValue\n       * @override\n       * @description - 获取默认排序方式\n       * @protected\n       */\n      getOrderPropValue: function getOrderPropValue() {\n        return 'descend';\n      },\n\n      /**\n       * clear\n       * @description - 清空查询条件\n       * @override\n       */\n      clear: function clear() {\n        var _this = this;\n\n        return new Promise(function (resolve) {\n          var _a;\n\n          Object.assign(_this, tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n          _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a)));\n\n          _this.$nextTick(function () {\n            resolve();\n          });\n        });\n      },\n\n      /**\n       * showLoading\n       * @description - 是否显示遮罩\n       * @override\n       */\n      showLoading: function showLoading() {\n        return this.loading[serviceName + \"/\" + this.getFetchListPropName()];\n      },\n\n      /**\n       * getSearchParams\n       * @description - 获取查询参数\n       * @protected\n       */\n      getSearchParams: function getSearchParams() {\n        var _a;\n\n        var _b = this,\n            page = _b.page,\n            limit = _b.limit,\n            searchParams = _b.searchParams;\n\n        return tslib_1.__assign({}, tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({\n          page: page,\n          limit: limit\n        }, searchParams), (_a = {}, _a[this.getOrderFieldProp()] = this.getOrderFieldValue(), _a[this.getOrderProp()] = this.getOrderPropValue() || 'descend', _a)), this.getFetchDataParams()));\n      },\n\n      /**\n       * fetchData\n       * @description - 加载数据\n       * @override\n       */\n      fetchData: function fetchData() {\n        return this.fetchDataExecute(this.getSearchParams());\n      },\n\n      /**\n       * fetchDataExecute\n       * @description - 真正的执行获取列表数据的接口\n       * @param searchParams\n       * @protected\n       */\n      fetchDataExecute: function fetchDataExecute(searchParams) {\n        return this[\"\" + serviceName + this.getFetchListPropNameToFirstUpper() + \"Action\"](searchParams);\n      },\n\n      /**\n       * onSearch\n       * @description - 点击查询\n       * @override\n       */\n      onSearch: function onSearch() {\n        var _this = this;\n\n        var keys = Object.keys(this.getParams());\n        var params = {};\n        keys.forEach(function (key) {\n          params[key] = _this[key];\n        });\n        return new Promise(function (resolve) {\n          var _a;\n\n          _this.searchParams = tslib_1.__assign(tslib_1.__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this[_this.getOrderProp()], _a));\n\n          _this.$nextTick(function () {\n            _this.fetchData().then(function () {\n              resolve();\n            });\n          });\n        });\n      },\n\n      /**\n       * renderSearchTableImplement\n       * @description - renderSearchTableImplement\n       * @param h\n       */\n      renderSearchTableImplement: function renderSearchTableImplement(h) {\n        return this.renderSearchTable(h);\n      }\n    }, serviceName ? tslib_1.__assign(tslib_1.__assign({}, vuexgenerator_1.mapActions([serviceName])), vuexgenerator_1.mapMutations([serviceName])) : {}),\n    render: function render(h) {\n      return this.renderSearchTableImplement(h);\n    }\n  });\n};"],"names":["require","Object","defineProperty","exports","value","tslib_1","vue_1","__importDefault","vuexgenerator_1","searchtable_1","__importStar","selectorPrefix","default","serviceName","extend","mixins","cleanMixin","data","_a","__assign","this","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","computed","mapState","methods","assign","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","length","charAt","toUpperCase","substring","onSelectChange","property","v","onInputChange","e","target","trim","onDateTimeRangeChange","propertys","moments","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","NUMBER_GENERATOR_RULE_CONTINUITY","getTableNumberColumnWidth","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","_this","onChange","renderSearchForm","h","renderSearchTableImplementInner","innerVNode","renderSearchTableInner","ref","class","renderInner","renderSearchFooterItems","clear","Promise","resolve","$nextTick","showLoading","loading","getSearchParams","_b","page","limit","fetchData","fetchDataExecute","onSearch","keys","params","forEach","key","then","renderSearchTableImplement","renderSearchTable","mapActions","mapMutations","render"],"mappings":"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"}