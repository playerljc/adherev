{"version":3,"file":"index-protable.js","sources":["demo/index-protable.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\n// import mergewith from 'lodash.mergewith';\nvar vue_1 = tslib_1.__importDefault(require(\"vue\"));\nvar index_1 = tslib_1.__importDefault(require(\"../index\"));\nvar ProTable_1 = tslib_1.__importDefault(require(\"./ProTable\"));\nvar store_1 = require(\"./store\");\nrequire(\"../index.less\");\nrequire(\"./index.less\");\nindex_1.default.use(vue_1.default);\nvar SearchTableImplementFactory = index_1.default.SearchTableImplementFactory;\nnew vue_1.default({\n  el: '#app',\n  store: (0, store_1.createStore)(),\n  render: function render(h) {\n    // return h(ProTable, {\n    //   props: {\n    //     wrapStyle: 'height:100%',\n    //     isShowExpandSearch: true,\n    //     defaultExpandSearchCollapse: false,\n    //     fixedHeaderAutoTable: true,\n    //     fixedTableSpaceBetween: true,\n    //   },\n    // });\n    return h(SearchTableImplementFactory(ProTable_1.default) /*{\n                                                             props: {\n                                                             wrapStyle: 'height:100%',\n                                                             isShowExpandSearch: true,\n                                                             defaultExpandSearchCollapse: false,\n                                                             fixedHeaderAutoTable: true,\n                                                             fixedTableSpaceBetween: true,\n                                                             },\n                                                             }*/);\n  }\n});\n// const mergeDataConfig = Vue.config.optionMergeStrategies.data;\n//\n// Vue.config.optionMergeStrategies.data = function (toVal, fromVal) {\n//   if (fromVal && toVal) {\n//     return () => {\n//       const fromValue = fromVal();\n//       const toValue = toVal();\n//\n//       return mergewith(fromValue, toValue, (objValue, srcValue) => {\n//         if (Array.isArray(objValue)) {\n//           return objValue.concat(srcValue);\n//         }\n//       });\n//     };\n//   }\n//\n//   if (fromVal) {\n//     return fromVal;\n//   }\n//\n//   if (toVal) {\n//     return toVal;\n//   }\n// };\n//\n// const Sub = {\n//   data() {\n//     return {\n//       arrValue: [6],\n//     };\n//   },\n//   methods: {\n//     foo: function () {\n//       console.log('foo');\n//     },\n//     conflicting: function () {\n//       console.log('from mixin');\n//     },\n//   },\n// };\n//\n// const App = {\n//   mixins: [Sub],\n//   data() {\n//     return {\n//       arrValue: [1, 2],\n//     };\n//   },\n//   methods: {\n//     bar: function () {\n//       console.log('bar');\n//     },\n//     conflicting: function () {\n//       console.log('from self');\n//     },\n//   },\n//   created: function () {\n//     console.log(this.arrValue);\n//   },\n//   template: `\n//     <div>\n//       {{arrValue.join(',')}}\n//     </div>\n//   `,\n// };\n//\n// var app = new Vue({\n//   el: '#app',\n//   render(h) {\n//     return h(App);\n//   },\n// });"],"names":["require","Object","defineProperty","exports","value","tslib_1","vue_1","__importDefault","index_1","ProTable_1","store_1","SearchTableImplementFactory","default","use","el","store","createStore","render","h"],"mappings":"AAAA,aAEAA,QAAQ,8CAA8C,EACtDC,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,MAAO,CAAA,CACT,CAAC,EACD,IAAIC,QAAUL,QAAQ,OAAO,EAEzBM,MAAQD,QAAQE,gBAAgBP,QAAQ,KAAK,CAAC,EAC9CQ,QAAUH,QAAQE,gBAAgBP,QAAQ,UAAU,CAAC,EACrDS,WAAaJ,QAAQE,gBAAgBP,QAAQ,YAAY,CAAC,EAC1DU,QAAUV,QAAQ,SAAS,EAI3BW,6BAHJX,QAAQ,eAAe,EACvBA,QAAQ,cAAc,EACtBQ,QAAQI,QAAQC,IAAIP,MAAMM,OAAO,EACCJ,QAAQI,QAAQD,6BAClD,IAAIL,MAAMM,QAAQ,CAChBE,GAAI,OACJC,OAAO,EAAIL,QAAQM,aAAa,EAChCC,OAAQ,SAAgBC,GAUtB,OAAOA,EAAEP,4BAA4BF,WAAWG,OAAO,CAQK,CAC9D,CACF,CAAC"}