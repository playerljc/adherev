{"version":3,"file":"dict.test.config.js","sources":["demo/dict.test.config.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.promise.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.from.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/es.array.fill.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar faker_1 = tslib_1.__importDefault(require(\"faker\"));\nvar adherev_util_dict_1 = tslib_1.__importDefault(require(\"@baifendian/adherev-util-dict\"));\nexports.default = {\n  initStatic: function initStatic() {\n    // Radio\n    adherev_util_dict_1.default.handlers.SystemTestRadio = function () {\n      return [{\n        value: 1,\n        label: '通过'\n      }, {\n        value: 2,\n        label: '不通过'\n      }, {\n        value: 3,\n        label: '退回'\n      }];\n    };\n    adherev_util_dict_1.default.handlers.SystemTestDynamicRadio = function () {\n      return Promise.resolve([{\n        value: 1,\n        label: '通过'\n      }, {\n        value: 2,\n        label: '不通过'\n      }, {\n        value: 3,\n        label: '退回'\n      }]);\n    };\n    // CheckBox\n    adherev_util_dict_1.default.handlers.SystemTestCheckBox = function () {\n      return [{\n        value: 1,\n        label: '通过'\n      }, {\n        value: 2,\n        label: '不通过'\n      }, {\n        value: 3,\n        label: '退回'\n      }];\n    };\n    adherev_util_dict_1.default.handlers.SystemTestDynamicCheckBox = function () {\n      return Promise.resolve([{\n        value: 1,\n        label: '通过'\n      }, {\n        value: 2,\n        label: '不通过'\n      }, {\n        value: 3,\n        label: '退回'\n      }]);\n    };\n    // Select\n    adherev_util_dict_1.default.handlers.SystemTestSelect = function () {\n      return [{\n        value: 1,\n        label: '通过'\n      }, {\n        value: 2,\n        label: '不通过'\n      }, {\n        value: 3,\n        label: '退回'\n      }];\n    };\n    adherev_util_dict_1.default.handlers.SystemTestDynamicSelect = function () {\n      return Promise.resolve([{\n        value: 1,\n        label: '通过'\n      }, {\n        value: 2,\n        label: '不通过'\n      }, {\n        value: 3,\n        label: '退回'\n      }]);\n    };\n    // AutoComplete\n    adherev_util_dict_1.default.handlers.SystemTestAutoCompleteSelect = function () {\n      return function (kw) {\n        var data = [{\n          label: 'java',\n          value: 1\n        }, {\n          label: 'javaScript',\n          value: 2\n        }, {\n          label: 'html',\n          value: 3\n        }, {\n          label: 'css',\n          value: 4\n        }, {\n          label: 'spring',\n          value: 5\n        }, {\n          label: 'react',\n          value: 6\n        }];\n        return Promise.resolve(data.filter(function (t) {\n          return t.label.includes(kw);\n        }));\n      };\n    };\n    adherev_util_dict_1.default.handlers.SystemTestTree = function () {\n      return [{\n        title: 'Node1',\n        value: '0-0',\n        leaf: false,\n        children: [{\n          title: 'Child Node1',\n          value: '0-0-1',\n          leaf: true\n        }, {\n          title: 'Child Node2',\n          value: '0-0-2',\n          leaf: true\n        }]\n      }, {\n        title: 'Node2',\n        value: '0-1',\n        leaf: true\n      }];\n    };\n    // Transfer\n    adherev_util_dict_1.default.handlers.SystemTestTransfer = function () {\n      return [{\n        value: '1',\n        label: '通过'\n      }, {\n        value: '2',\n        label: '不通过'\n      }, {\n        value: '3',\n        label: '退回'\n      }];\n    };\n    adherev_util_dict_1.default.handlers.SystemTestDynamicTransfer = function () {\n      return Promise.resolve([{\n        value: '1',\n        label: '通过'\n      }, {\n        value: '2',\n        label: '不通过'\n      }, {\n        value: '3',\n        label: '退回'\n      }]);\n    };\n    // Table\n    adherev_util_dict_1.default.handlers.SystemTestTable = function () {\n      return Array.from({\n        length: 10\n      }).map(function (t, index) {\n        return {\n          id: faker_1.default.random.uuid(),\n          isMore: !!Math.floor(Math.random() * 10 % 2),\n          name: faker_1.default.internet.userName(),\n          sex: \"\".concat((index + 1) % 2),\n          birthDay: faker_1.default.time.recent(),\n          deptName: faker_1.default.company.companyName(),\n          height: faker_1.default.random.number(),\n          width: faker_1.default.random.number(),\n          hometown: faker_1.default.address.city(),\n          address: faker_1.default.address.streetAddress()\n        };\n      });\n    };\n    adherev_util_dict_1.default.handlers.SystemTestTablePagination = function () {\n      return function (paging) {\n        var current = paging.current,\n          pageSize = paging.pageSize;\n        var data = [];\n        data.length = 300;\n        data.fill(0);\n        var res = {\n          resCode: 0,\n          data: {\n            total: data.length,\n            pages: 30,\n            current: 1,\n            records: data.slice((current - 1) * pageSize, (current - 1) * pageSize + pageSize).map(function (t, index) {\n              return {\n                id: (current - 1) * pageSize + (index + 1),\n                isMore: !!Math.floor(Math.random() * 10 % 2),\n                name: faker_1.default.internet.userName(),\n                sex: \"\".concat((index + 1) % 2),\n                birthDay: faker_1.default.time.recent(),\n                deptName: faker_1.default.company.companyName(),\n                height: faker_1.default.random.number(),\n                width: faker_1.default.random.number(),\n                hometown: faker_1.default.address.city(),\n                address: faker_1.default.address.streetAddress()\n              };\n            })\n          },\n          resMsg: ''\n        };\n        return Promise.resolve(res.data);\n      };\n    };\n    // Cascader\n    adherev_util_dict_1.default.handlers.SystemTestCascader = function () {\n      return [{\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [{\n          value: 'hangzhou',\n          label: 'Hangzhou',\n          children: [{\n            value: 'xihu',\n            label: 'West Lake'\n          }]\n        }]\n      }, {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [{\n          value: 'nanjing',\n          label: 'Nanjing',\n          children: [{\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men'\n          }]\n        }]\n      }];\n    };\n    adherev_util_dict_1.default.handlers.SystemTestDynamicCascader = function () {\n      return Promise.resolve([{\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [{\n          value: 'hangzhou',\n          label: 'Hangzhou',\n          children: [{\n            value: 'xihu',\n            label: 'West Lake'\n          }]\n        }]\n      }, {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [{\n          value: 'nanjing',\n          label: 'Nanjing',\n          children: [{\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men'\n          }]\n        }]\n      }]);\n    };\n    // List\n    adherev_util_dict_1.default.handlers.SystemTestList = function () {\n      return Array.from({\n        length: 5\n      }).map(function (t, index) {\n        return {\n          id: faker_1.default.random.uuid(),\n          isMore: !!Math.floor(Math.random() * 10 % 2),\n          name: faker_1.default.internet.userName(),\n          sex: \"\".concat((index + 1) % 2),\n          birthDay: faker_1.default.time.recent(),\n          deptName: faker_1.default.company.companyName(),\n          height: faker_1.default.random.number(),\n          width: faker_1.default.random.number(),\n          hometown: faker_1.default.address.city(),\n          address: faker_1.default.address.streetAddress()\n        };\n      });\n    };\n    adherev_util_dict_1.default.handlers.SystemTestListPagination = function () {\n      return function (paging) {\n        var current = paging.current,\n          pageSize = paging.pageSize;\n        var data = [];\n        data.length = 300;\n        data.fill(0);\n        var res = {\n          resCode: 0,\n          data: {\n            total: data.length,\n            pages: 30,\n            current: 1,\n            records: data.slice((current - 1) * pageSize, (current - 1) * pageSize + pageSize).map(function (t, index) {\n              return {\n                id: (current - 1) * pageSize + (index + 1),\n                isMore: !!Math.floor(Math.random() * 10 % 2),\n                name: faker_1.default.internet.userName(),\n                sex: \"\".concat((index + 1) % 2),\n                birthDay: faker_1.default.time.recent(),\n                deptName: faker_1.default.company.companyName(),\n                height: faker_1.default.random.number(),\n                width: faker_1.default.random.number(),\n                hometown: faker_1.default.address.city(),\n                address: faker_1.default.address.streetAddress()\n              };\n            })\n          },\n          resMsg: ''\n        };\n        return Promise.resolve(res.data);\n      };\n    };\n    // sex\n    adherev_util_dict_1.default.handlers.SystemTestSexSelect = function () {\n      return [{\n        label: '男',\n        value: '0'\n      }, {\n        label: '女',\n        value: '1'\n      }];\n    };\n  },\n  initRemote: function initRemote() {}\n};"],"names":["require","Object","defineProperty","exports","value","tslib_1","faker_1","__importDefault","adherev_util_dict_1","default","initStatic","handlers","SystemTestRadio","label","SystemTestDynamicRadio","Promise","resolve","SystemTestCheckBox","SystemTestDynamicCheckBox","SystemTestSelect","SystemTestDynamicSelect","SystemTestAutoCompleteSelect","kw","filter","t","includes","SystemTestTree","title","leaf","children","SystemTestTransfer","SystemTestDynamicTransfer","SystemTestTable","Array","from","length","map","index","id","random","uuid","isMore","Math","floor","name","internet","userName","sex","concat","birthDay","time","recent","deptName","company","companyName","height","number","width","hometown","address","city","streetAddress","SystemTestTablePagination","paging","current","pageSize","data","res","fill","resCode","total","pages","records","slice","resMsg","SystemTestCascader","SystemTestDynamicCascader","SystemTestList","SystemTestListPagination","SystemTestSexSelect","initRemote"],"mappings":"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"}