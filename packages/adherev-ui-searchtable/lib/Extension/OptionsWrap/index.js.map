{"version":3,"file":"index.js","sources":["Extension/OptionsWrap/index.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nrequire(\"core-js/modules/es.array.find.js\");\nrequire(\"core-js/modules/es.array.find-index.js\");\nrequire(\"core-js/modules/es.array.splice.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar adherev_ui_split_1 = tslib_1.__importDefault(require(\"@baifendian/adherev-ui-split\"));\nvar selectorPrefix = \"adherev-ui-searchtable-optionswrap\";\nexports.default = {\n  name: selectorPrefix,\n  render: function render(h) {\n    var children = this.$slots.default;\n    var result;\n    if (children.length <= 1) {\n      result = children;\n    } else {\n      var filter_1 = children.filter(function (t) {\n        var _a, _b, _c, _d, _e;\n        if (((_a = t === null || t === void 0 ? void 0 : t.tag) === null || _a === void 0 ? void 0 : _a.indexOf('adv-conditionalrender')) !== -1) {\n          if ((_c = (_b = t === null || t === void 0 ? void 0 : t.componentOptions) === null || _b === void 0 ? void 0 : _b.propsData) === null || _c === void 0 ? void 0 : _c.conditional) return true;\n          return !!((_e = (_d = t === null || t === void 0 ? void 0 : t.componentOptions) === null || _d === void 0 ? void 0 : _d.children) === null || _e === void 0 ? void 0 : _e.find(function (c) {\n            var _a;\n            return ((_a = c === null || c === void 0 ? void 0 : c.data) === null || _a === void 0 ? void 0 : _a.slot) === 'noMatch';\n          }));\n        }\n        return true;\n      });\n      if (filter_1.length <= 1) {\n        result = children;\n      } else {\n        var _loop_1 = function _loop_1(i) {\n          var index = children.findIndex(function (t) {\n            return t === filter_1[i];\n          });\n          children.splice(index + 1, 0, h(adherev_ui_split_1.default, {\n            \"attrs\": {\n              \"direction\": \"horizontal\"\n            }\n          }));\n        };\n        for (var i = 0; i <= filter_1.length - 2; i++) {\n          _loop_1(i);\n        }\n        result = children;\n      }\n    }\n    return h(\"div\", {\n      \"class\": selectorPrefix\n    }, [result]);\n  }\n};"],"names":["require","Object","defineProperty","exports","value","tslib_1","adherev_ui_split_1","__importDefault","selectorPrefix","default","name","render","h","children","this","$slots","length","filter_1","filter","t","_d","_a","tag","indexOf","_c","_b","componentOptions","propsData","conditional","_e","find","c","data","slot","i","_loop_1","index","findIndex","splice","attrs","direction","class"],"mappings":"AAAA,aAEAA,QAAQ,8CAA8C,EACtDA,QAAQ,oCAAoC,EAC5CA,QAAQ,wCAAwC,EAChDA,QAAQ,sCAAsC,EAC9CA,QAAQ,kCAAkC,EAC1CA,QAAQ,wCAAwC,EAChDA,QAAQ,oCAAoC,EAC5CC,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,MAAO,CAAA,CACT,CAAC,EACD,IAAIC,QAAUL,QAAQ,OAAO,EACzBM,mBAAqBD,QAAQE,gBAAgBP,QAAQ,8BAA8B,CAAC,EACpFQ,eAAiB,qCACrBL,QAAQM,QAAU,CAChBC,KAAMF,eACNG,OAAQ,SAAgBC,GACtB,IAAIC,EAAWC,KAAKC,OAAON,QAE3B,GAAII,EAAAA,EAASG,QAAU,GAAvB,CAGE,IAAIC,EAAWJ,EAASK,OAAO,SAAUC,GACvC,IAAgBC,EAChB,MAAsI,CAAC,KAAlI,OAACC,EAAKF,MAAAA,EAA6B,KAAA,EAASA,EAAEG,KAAiC,KAAA,EAASD,EAAGE,QAAQ,uBAAuB,IACzH,EAAA,OAACC,EAAK,OAACC,EAAKN,MAAAA,EAA6B,KAAA,EAASA,EAAEO,kBAA8C,KAAA,EAASD,EAAGE,YAAgDH,CAAAA,EAAGI,cAC9J,EAAG,OAACC,EAAK,OAACT,EAAKD,MAAAA,EAA6B,KAAA,EAASA,EAAEO,kBAA8C,KAAA,EAASN,EAAGP,WAA+CgB,CAAAA,EAAGC,KAAK,SAAUC,GAEvL,MAA8G,aAAtG,OAACV,EAAKU,MAAAA,EAA6B,KAAA,EAASA,EAAEC,MAAkC,KAAA,EAASX,EAAGY,KACtG,CAAC,EAGL,CAAC,EACD,GAAIhB,EAAAA,EAASD,QAAU,GAarB,IAVA,IAUSkB,EAAI,EAAGA,GAAKjB,EAASD,OAAS,EAAGkB,CAAC,GACzCC,CAXY,SAAiBD,GAC7B,IAAIE,EAAQvB,EAASwB,UAAU,SAAUlB,GACvC,OAAOA,IAAMF,EAASiB,EACxB,CAAC,EACDrB,EAASyB,OAAOF,EAAQ,EAAG,EAAGxB,EAAEN,mBAAmBG,QAAS,CAC1D8B,MAAS,CACPC,UAAa,YACf,CACF,CAAC,CAAC,CACJ,EAEUN,CAAC,CAIf,CACA,OAAOtB,EAAE,MAAO,CACd6B,MAASjC,cACX,EAAG,CALUK,EAKF,CACb,CACF"}