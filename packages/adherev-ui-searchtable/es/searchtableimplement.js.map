{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { __assign } from \"tslib\"; // @ts-ignore\n\nimport { cleanMixin, mapActions, mapMutations, mapState } from '@ctsj/vuexgenerator';\nimport { defineComponent } from 'vue';\nimport SearchTable, { NUMBER_GENERATOR_RULE_CONTINUITY } from './searchtable';\nvar selectorPrefix = 'adherev-ui-searchtableimplement';\nexport default (function (serviceName) {\n  return defineComponent({\n    mixins: serviceName ? [SearchTable, cleanMixin([serviceName])] : [SearchTable],\n    data: function data() {\n      var _a;\n\n      return __assign(__assign({}, this.getParams()), (_a = {}, _a[this.getOrderFieldProp()] = this.getOrderFieldValue(), _a[this.getOrderProp()] = this.getOrderPropValue() || 'descend', // 查询参数\n      _a.searchParams = __assign({}, this.getParams()), _a.selectedRowKeys = [], _a));\n    },\n    computed: serviceName ? __assign({}, mapState([serviceName])) : {},\n    methods: Object.assign({\n      /**\n       * getFetchListPropName\n       * @override\n       * @description - 获取调用列表接口的函数名\n       */\n      getFetchListPropName: function getFetchListPropName() {\n        return '';\n      },\n\n      /**\n       * getFetchListPropNameToFirstUpper\n       * @override\n       * @description - 获取调用列表接口的函数名首字母大写\n       * @return string\n       */\n      getFetchListPropNameToFirstUpper: function getFetchListPropNameToFirstUpper() {\n        var fetchListPropName = this.getFetchListPropName();\n\n        if (fetchListPropName.length > 1) {\n          return \"\".concat(fetchListPropName.charAt(0).toUpperCase()).concat(fetchListPropName.substring(1));\n        }\n\n        return fetchListPropName;\n      },\n      // ------------ 不需要重写(override)的方法 start ------------------\n\n      /**\n       * onSelectChange\n       * @description - onSelectChange\n       * @param property\n       * @param v\n       */\n      onSelectChange: function onSelectChange(property, v) {\n        // @ts-ignore\n        this[property] = v;\n      },\n\n      /**\n       * onInputChange\n       * @description - onInputChange\n       * @param property\n       * @param e\n       */\n      onInputChange: function onInputChange(property, e) {\n        // @ts-ignore\n        this[property] = e.target.value.trim();\n      },\n\n      /**\n       * onDateTimeRangeChange\n       * @description - onDateTimeRangeChange\n       * @param propertys\n       * @param moments\n       */\n      onDateTimeRangeChange: function onDateTimeRangeChange(propertys, moments) {\n        // @ts-ignore\n        this[propertys[0]] = moments && moments.length ? moments[0] : null; // @ts-ignore\n\n        this[propertys[1]] = moments && moments.length ? moments[1] : null;\n      },\n      // ------------ 不需要重写(override)的方法 end ------------------\n\n      /**\n       * getParams\n       * @override\n       * @description - 获取查询参数对象\n       */\n      getParams: function getParams() {\n        return {};\n      },\n\n      /**\n       * getServiceName\n       * @override\n       * @description - 获取接口服务的model名称\n       */\n      getServiceName: function getServiceName() {\n        return serviceName;\n      },\n\n      /**\n       * getFetchDataParams\n       * @override\n       * @description - 获取调用数据接口的参数\n       */\n      getFetchDataParams: function getFetchDataParams() {\n        return {};\n      },\n\n      /**\n       * isShowNumber\n       * @description - 是否线上序号列\n       * @override\n       * @return {boolean}\n       */\n      isShowNumber: function isShowNumber() {\n        return true;\n      },\n\n      /**\n       * getNumberGeneratorRule\n       * @override\n       * @description - 表格序号列的生成规则\n       */\n      getNumberGeneratorRule: function getNumberGeneratorRule() {\n        return NUMBER_GENERATOR_RULE_CONTINUITY;\n      },\n\n      /**\n       * getTableNumberColumnWidth\n       * @override\n       * @description - 表格序号列的宽度\n       */\n      getTableNumberColumnWidth: function getTableNumberColumnWidth() {\n        return 80;\n      },\n\n      /**\n       * getRowKey\n       * @override\n       * @description - 数据的主键\n       */\n      getRowKey: function getRowKey() {\n        return 'id';\n      },\n\n      /**\n       * getDataKey\n       * @description - 获取数据的key\n       * @protected\n       */\n      getDataKey: function getDataKey() {\n        return 'list';\n      },\n\n      /**\n       * getTotalKey\n       * @description - 获取total的key\n       * @protected\n       */\n      getTotalKey: function getTotalKey() {\n        return 'totalCount';\n      },\n\n      /**\n       * getData\n       * @description - Table的数据(Table的dataSource字段)\n       * @override\n       * @return {Array}\n       */\n      getData: function getData() {\n        // @ts-ignore\n        return this[\"\".concat(serviceName).concat(this.getFetchListPropNameToFirstUpper())][this.getDataKey()];\n      },\n\n      /**\n       * getTotal\n       * @description - Table数据的总条数\n       * @override\n       */\n      getTotal: function getTotal() {\n        // @ts-ignore\n        return this[\"\".concat(serviceName).concat(this.getFetchListPropNameToFirstUpper())][this.getTotalKey()];\n      },\n\n      /**\n       * getRowSelection\n       * @override\n       * @description - 获取表格行选择对象\n       */\n      getRowSelection: function getRowSelection() {\n        var _this = this;\n\n        var selectedRowKeys = this.selectedRowKeys;\n        return {\n          selectedRowKeys: selectedRowKeys,\n          onChange: function onChange(selectedRowKeys) {\n            // @ts-ignore\n            _this.selectedRowKeys = selectedRowKeys;\n          }\n        };\n      },\n\n      /**\n       * renderSearchForm\n       * @override\n       * @description - 渲染Table查询的表单\n       */\n      renderSearchForm: function renderSearchForm() {\n        return null;\n      },\n      renderSearchTableImplementInner: function renderSearchTableImplementInner() {\n        // @ts-ignore\n        var innerVNode = this.renderSearchTableInner();\n        return _createVNode(\"div\", {\n          \"ref\": \"innerWrapRef\",\n          \"class\": \"\".concat(selectorPrefix, \"-tablewrapper\")\n        }, [innerVNode]);\n      },\n\n      /**\n       * renderInner\n       * @override\n       * @description - 渲染主体\n       */\n      renderInner: function renderInner() {\n        return this.renderSearchTableImplementInner();\n      },\n\n      /**\n       * renderSearchFooterItems\n       * @description - 渲染表格的工具栏\n       * @override\n       */\n      renderSearchFooterItems: function renderSearchFooterItems() {\n        return [];\n      },\n\n      /**\n       * getOrderFieldProp\n       * @description - 获取排序字段\n       * @override\n       */\n      getOrderFieldProp: function getOrderFieldProp() {\n        return 'orderField';\n      },\n\n      /**\n       * getOrderFieldValue\n       * @description - 获取默认排序字段的值\n       * @override\n       * @protected\n       */\n      getOrderFieldValue: function getOrderFieldValue() {\n        return '';\n      },\n\n      /**\n       * getOrderProp\n       * @description - 获取排序方式\n       */\n      getOrderProp: function getOrderProp() {\n        return 'order';\n      },\n\n      /**\n       * getOrderPropValue\n       * @override\n       * @description - 获取默认排序方式\n       * @protected\n       */\n      getOrderPropValue: function getOrderPropValue() {\n        return 'descend';\n      },\n\n      /**\n       * clear\n       * @description - 清空查询条件\n       * @override\n       */\n      clear: function clear() {\n        var _this = this;\n\n        return new Promise(function (resolve) {\n          var _a;\n\n          Object.assign(_this, __assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n          _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a))); // @ts-ignore\n\n          _this.$nextTick(function () {\n            resolve(null);\n          });\n        });\n      },\n\n      /**\n       * showLoading\n       * @description - 是否显示遮罩\n       * @override\n       */\n      showLoading: function showLoading() {\n        // @ts-ignore\n        return this.loading[\"\".concat(serviceName, \"/\").concat(this.getFetchListPropName())];\n      },\n\n      /**\n       * getSearchParams\n       * @description - 获取查询参数\n       * @protected\n       */\n      getSearchParams: function getSearchParams() {\n        var _a;\n\n        var _b = this,\n            page = _b.page,\n            limit = _b.limit,\n            searchParams = _b.searchParams;\n\n        return __assign({}, __assign(__assign(__assign({\n          page: page,\n          limit: limit\n        }, searchParams), (_a = {}, _a[this.getOrderFieldProp()] = this.getOrderFieldValue(), _a[this.getOrderProp()] = this.getOrderPropValue() || 'descend', _a)), this.getFetchDataParams()));\n      },\n\n      /**\n       * fetchData\n       * @description - 加载数据\n       * @override\n       */\n      fetchData: function fetchData() {\n        return this.fetchDataExecute(this.getSearchParams());\n      },\n\n      /**\n       * fetchDataExecute\n       * @description - 真正的执行获取列表数据的接口\n       * @param searchParams\n       * @protected\n       */\n      fetchDataExecute: function fetchDataExecute(searchParams) {\n        // @ts-ignore\n        return this[\"\".concat(serviceName).concat(this.getFetchListPropNameToFirstUpper(), \"Action\")](searchParams);\n      },\n\n      /**\n       * onSearch\n       * @description - 点击查询\n       * @override\n       */\n      onSearch: function onSearch() {\n        var _this = this;\n\n        var keys = Object.keys(this.getParams());\n        var params = {};\n        keys.forEach(function (key) {\n          // @ts-ignore\n          params[key] = _this[key];\n        });\n        return new Promise(function (resolve) {\n          var _a; // @ts-ignore\n\n\n          _this.searchParams = __assign(__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this[_this.getOrderProp()], _a)); // @ts-ignore\n\n          _this.$nextTick(function () {\n            _this.fetchData().then(function () {\n              resolve(null);\n            });\n          });\n        });\n      },\n\n      /**\n       * renderSearchTableImplement\n       * @description - renderSearchTableImplement\n       */\n      // @ts-ignore\n      renderSearchTableImplement: function renderSearchTableImplement() {\n        // @ts-ignore\n        return this.renderSearchTable();\n      }\n    }, serviceName ? __assign(__assign({}, mapActions([serviceName])), mapMutations([serviceName])) : {}),\n    render: function render() {\n      return this.renderSearchTableImplement();\n    }\n  });\n});"],"names":["_createVNode","__assign","cleanMixin","mapActions","mapMutations","mapState","defineComponent","SearchTable","NUMBER_GENERATOR_RULE_CONTINUITY","selectorPrefix","serviceName","mixins","data","_a","this","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","computed","methods","Object","assign","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","length","concat","charAt","toUpperCase","substring","onSelectChange","property","v","onInputChange","e","target","value","trim","onDateTimeRangeChange","propertys","moments","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","getTableNumberColumnWidth","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","_this","onChange","renderSearchForm","renderSearchTableImplementInner","innerVNode","renderSearchTableInner","ref","class","renderInner","renderSearchFooterItems","clear","Promise","resolve","$nextTick","showLoading","loading","getSearchParams","_b","page","limit","fetchData","fetchDataExecute","onSearch","keys","params","forEach","key","then","renderSearchTableImplement","renderSearchTable","render"],"mappings":"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"}