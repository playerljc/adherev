import"core-js/modules/es.array.iterator.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/web.dom-collections.iterator.js";import"core-js/modules/es.promise.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.array.find.js";import"core-js/modules/es.array.last-index-of.js";import moment from"moment";import Util from"@baifendian/adherev-util";import SearchEditableCellTable from"./SearchEditableCellTable";var extend=Util._util.extend;export default function(e){return extend({className:"SearchEditableRowTable",mixins:[SearchEditableCellTable(e)],data:function(){var o=this;return{$rowConfigReducers:[function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return o.rowEditableReducer.apply(o,e)}],editorRowId:""}},methods:{rowEditableReducer:function(e){var t=e.rowConfig,o=e.rowIndex,r=e.columns,e=e.record;return this.onEditorRow&&(t.$editable=this.onEditorRow({rowIndex:o,record:e,columns:r})),t},onEditorRow:function(e){return{editable:!0}},onEditorCell:function(e){var t=e.record,e=e.editorConfig;e&&(e.useTrigger=!1,t[this.getRowKey()]===this.editorRowId)&&(e.defaultStatus="edit")},fetchData:function(){var t=this;return this.$fetchDataSearchTableImpl().then(function(e){return t.editorRowId="",e})},updateEditorCellRowData:function(e){var t=this,n=e.values,a=e.record,s=e.rowIndex;return new Promise(function(e){var r=t.getData()||[],i=t.getRowKey();Object.keys(n).forEach(function(e){var t=n[e],o=(t instanceof moment&&(t=t.valueOf()),r.find(function(e){return e[i]===a[i]}));o&&(o[e.substring(0,e.lastIndexOf("_".concat(s)))]=t)}),t.receiveDataMutation(r),t.$nextTick(function(){return e()})})}}})}
//# sourceMappingURL=SearchEditableRowTable.js.map
