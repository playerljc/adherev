{"version":3,"file":"user.js","sources":["demo/service/user.js"],"sourcesContent":["import userMock from '../mock/user';\nimport request from '../util/request';\nexport var fetchList = function () {\n  return {\n    call: function call() {\n      return request.get({\n        path: userMock.fetchList,\n        mock: true,\n        loading: {\n          show: false\n        }\n      }).then(function (res) {\n        return res;\n      });\n    },\n    defaultResult: function defaultResult() {\n      return {\n        total: 0,\n        records: []\n      };\n    }\n  };\n}();\nexport var fetchDel = function () {\n  return {\n    call: function call(id, loading) {\n      return request.get({\n        path: userMock.fetchDel,\n        mock: true,\n        loading: {\n          show: loading\n        }\n      });\n    },\n    defaultResult: function defaultResult() {\n      return true;\n    }\n  };\n}();\nexport var fetchInfo = function () {\n  return {\n    call: function call(id, loading) {\n      return request.get({\n        path: userMock.fetchInfo,\n        mock: true,\n        loading: {\n          show: loading\n        }\n      });\n    },\n    defaultResult: function defaultResult() {\n      return {\n        id: '',\n        name: '',\n        sex: '',\n        birthDay: '',\n        height: '',\n        width: '',\n        hometown: '',\n        address: '',\n        hobby: null,\n        annex: []\n      };\n    }\n  };\n}();\nexport var fetchSave = function () {\n  return {\n    call: function call(params, loading) {\n      return request.post({\n        path: userMock.fetchSave,\n        mock: true,\n        loading: {\n          show: loading\n        }\n      });\n    },\n    defaultResult: function defaultResult() {\n      return true;\n    }\n  };\n}();\nexport var fetchUpdate = function () {\n  return {\n    call: function call(params, loading) {\n      return request.post({\n        path: userMock.fetchUpdate,\n        mock: true,\n        loading: {\n          show: loading\n        }\n      });\n    },\n    defaultResult: function defaultResult() {\n      return true;\n    }\n  };\n}();\nexport default {\n  codeKey: 'resCode',\n  codeSuccessKey: 0,\n  dataKey: 'data',\n  messageKey: 'resMsg'\n};"],"names":["userMock","request","fetchList","call","get","path","mock","loading","show","then","res","defaultResult","total","records","fetchDel","id","fetchInfo","name","sex","birthDay","height","width","hometown","address","hobby","annex","fetchSave","params","post","fetchUpdate","codeKey","codeSuccessKey","dataKey","messageKey"],"mappings":"OAAOA,aAAc,sBACdC,YAAa,kBACb,IAAIC,UACF,CACLC,KAAM,WACJ,OAAOF,QAAQG,IAAI,CACjBC,KAAML,SAASE,UACfI,KAAM,CAAA,EACNC,QAAS,CACPC,KAAM,CAAA,CACR,CACF,CAAC,EAAEC,KAAK,SAAUC,GAChB,OAAOA,CACT,CAAC,CACH,EACAC,cAAe,WACb,MAAO,CACLC,MAAO,EACPC,QAAS,EACX,CACF,CACF,EAESC,SACF,CACLX,KAAM,SAAcY,EAAIR,GACtB,OAAON,QAAQG,IAAI,CACjBC,KAAML,SAASc,SACfR,KAAM,CAAA,EACNC,QAAS,CACPC,KAAMD,CACR,CACF,CAAC,CACH,EACAI,cAAe,WACb,MAAO,CAAA,CACT,CACF,EAESK,UACF,CACLb,KAAM,SAAcY,EAAIR,GACtB,OAAON,QAAQG,IAAI,CACjBC,KAAML,SAASgB,UACfV,KAAM,CAAA,EACNC,QAAS,CACPC,KAAMD,CACR,CACF,CAAC,CACH,EACAI,cAAe,WACb,MAAO,CACLI,GAAI,GACJE,KAAM,GACNC,IAAK,GACLC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,MAAO,KACPC,MAAO,EACT,CACF,CACF,EAESC,UACF,CACLvB,KAAM,SAAcwB,EAAQpB,GAC1B,OAAON,QAAQ2B,KAAK,CAClBvB,KAAML,SAAS0B,UACfpB,KAAM,CAAA,EACNC,QAAS,CACPC,KAAMD,CACR,CACF,CAAC,CACH,EACAI,cAAe,WACb,MAAO,CAAA,CACT,CACF,EAESkB,YACF,CACL1B,KAAM,SAAcwB,EAAQpB,GAC1B,OAAON,QAAQ2B,KAAK,CAClBvB,KAAML,SAAS6B,YACfvB,KAAM,CAAA,EACNC,QAAS,CACPC,KAAMD,CACR,CACF,CAAC,CACH,EACAI,cAAe,WACb,MAAO,CAAA,CACT,CACF,gBAEa,CACbmB,QAAS,UACTC,eAAgB,EAChBC,QAAS,OACTC,WAAY,QACd,SArGW/B,UAqBAY,SAgBAE,UA2BAU,UAgBAG,WAqBV"}