{"version":3,"file":"ProRowDragSortEditableCellTable.js","sources":["demo/ProRowDragSortEditableCellTable.js"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport { __assign } from \"tslib\";\nimport Util from '@baifendian/adherev-util';\nimport SearchTable from '../index';\nvar extend = Util._util.extend;\nvar ProDragSortEditableCellSearchTable = SearchTable.ProDragSortEditableCellSearchTable,\n  OptionsWrap = SearchTable.OptionsWrap,\n  DisabledOption = SearchTable.DisabledOption;\nexport default extend({\n  className: 'ProRowDragSortEditableCellTable',\n  mixins: [ProDragSortEditableCellSearchTable('user')],\n  methods: {\n    getFetchListPropName: function getFetchListPropName() {\n      return 'fetchList';\n    },\n    getOrderFieldValue: function getOrderFieldValue() {\n      return 'height';\n    },\n    getDataKey: function getDataKey() {\n      return 'records';\n    },\n    getTotalKey: function getTotalKey() {\n      return 'total';\n    },\n    getScopedSlots: function getScopedSlots(h) {\n      var _this = this;\n      var superScopedSlots = this.$getScopedSlotsProDragSortEditableCellSearchTable(h);\n      return __assign(__assign({}, superScopedSlots), {\n        options: function options(val, record) {\n          return h(OptionsWrap, [_this.renderOptionColumn([{\n            key: 'view',\n            value: h(\"a\", {\n              \"on\": {\n                \"click\": function click() {\n                  return alert(1);\n                }\n              }\n            }, [\"\\u67E5\\u770B\"])\n          }, {\n            key: 'edit',\n            value: h(\"a\", {\n              \"on\": {\n                \"click\": function click() {\n                  return alert(2);\n                }\n              }\n            }, [\"\\u7F16\\u8F91\"])\n          }, {\n            key: 'delete',\n            value: h(DisabledOption, [\"\\u5220\\u9664\"])\n          }], {\n            val: val,\n            record: record\n          })]);\n        }\n      });\n    },\n    getColumns: function getColumns() {\n      var _this = this;\n      return this.$getColumnsProDragSortEditableCellSearchTable([{\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n        align: 'center',\n        width: 200,\n        $search: {\n          type: 'input',\n          visible: true\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [{\n            required: true,\n            message: '请输入姓名'\n          }],\n          onSave: function onSave(_a) {\n            var value = _a.value,\n              record = _a.record,\n              dataIndex = _a.dataIndex;\n            return new Promise(function (resolve) {\n              _this.updateEditorCellDate({\n                record: record,\n                dataIndex: dataIndex,\n                value: value\n              }).then(function () {\n                return resolve();\n              });\n            });\n          }\n        }\n      }, {\n        title: '性别',\n        dataIndex: 'sex',\n        key: 'sex',\n        align: 'center',\n        width: 200,\n        scopedSlots: {\n          customRender: 'sex'\n        },\n        $search: {\n          type: 'select',\n          visible: true,\n          dictName: 'SystemTestSexSelect'\n        }\n      }, {\n        title: '籍贯',\n        dataIndex: 'homeTown',\n        key: 'homeTown',\n        align: 'center',\n        width: 200,\n        $search: {\n          type: 'input',\n          visible: true\n        },\n        $editable: {\n          editable: true,\n          type: 'input',\n          rules: [{\n            required: true,\n            message: '请输入姓名'\n          }],\n          onSave: function onSave(_a) {\n            var value = _a.value,\n              record = _a.record,\n              dataIndex = _a.dataIndex;\n            return new Promise(function (resolve) {\n              _this.updateEditorCellDate({\n                record: record,\n                dataIndex: dataIndex,\n                value: value\n              }).then(function () {\n                return resolve();\n              });\n            });\n          }\n        }\n      }, {\n        title: '出生年月',\n        dataIndex: 'birthday',\n        key: 'birthday',\n        align: 'center',\n        sorter: true,\n        width: 200,\n        sortOrder: this.sortOrder('birthday'),\n        scopedSlots: {\n          customRender: 'birthday'\n        },\n        $search: {\n          type: 'rangePicker',\n          visible: true,\n          startName: 'birthDayStart',\n          endName: 'birthDayEnd'\n        },\n        $editable: {\n          editable: true,\n          type: 'datePicker',\n          rules: [{\n            required: true,\n            message: '请选择'\n          }],\n          onSave: function onSave(_a) {\n            var record = _a.record,\n              dataIndex = _a.dataIndex,\n              value = _a.value;\n            return new Promise(function (resolve) {\n              _this.updateEditorCellDateData({\n                record: record,\n                dataIndex: dataIndex,\n                value: value\n              }).then(function () {\n                return resolve();\n              });\n            });\n          }\n        }\n      }, {\n        title: '所在部门',\n        dataIndex: 'deptName',\n        key: 'deptName',\n        align: 'center',\n        width: 200,\n        $search: {\n          type: 'input',\n          visible: true\n        }\n      }, {\n        title: '身高',\n        dataIndex: 'height',\n        key: 'height',\n        align: 'center',\n        sorter: true,\n        sortOrder: this.sortOrder('height'),\n        width: 300,\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [{\n            required: true,\n            message: '请输入体重'\n          }],\n          onSave: function onSave(_a) {\n            var record = _a.record,\n              dataIndex = _a.dataIndex,\n              value = _a.value;\n            return new Promise(function (resolve) {\n              _this.updateEditorCellDate({\n                record: record,\n                dataIndex: dataIndex,\n                value: value\n              }).then(function () {\n                return resolve();\n              });\n            });\n          }\n        }\n      }, {\n        title: '体重',\n        dataIndex: 'width',\n        key: 'width',\n        align: 'center',\n        sorter: true,\n        sortOrder: this.sortOrder('width'),\n        width: 300,\n        $search: {\n          type: 'inputNumberDecimal2',\n          visible: true\n        },\n        $editable: {\n          editable: true,\n          type: 'inputNumberDecimal2',\n          rules: [{\n            required: true,\n            message: '请输入体重'\n          }],\n          onSave: function onSave(_a) {\n            var record = _a.record,\n              dataIndex = _a.dataIndex,\n              value = _a.value;\n            return new Promise(function (resolve) {\n              _this.updateEditorCellDate({\n                record: record,\n                dataIndex: dataIndex,\n                value: value\n              }).then(function () {\n                return resolve();\n              });\n            });\n          }\n        }\n      }, {\n        title: '操作',\n        dataIndex: '_options',\n        key: '_options',\n        align: 'center',\n        scopedSlots: {\n          customRender: 'options'\n        },\n        width: 200\n      }]);\n    }\n  }\n});"],"names":["__assign","Util","SearchTable","extend","_util","ProDragSortEditableCellSearchTable","OptionsWrap","DisabledOption","className","mixins","methods","getFetchListPropName","getOrderFieldValue","getDataKey","getTotalKey","getScopedSlots","h","_this","this","superScopedSlots","$getScopedSlotsProDragSortEditableCellSearchTable","options","val","record","renderOptionColumn","key","value","on","click","alert","getColumns","$getColumnsProDragSortEditableCellSearchTable","title","dataIndex","align","width","$search","type","visible","$editable","editable","rules","required","message","onSave","_a","Promise","resolve","updateEditorCellDate","then","scopedSlots","customRender","dictName","sorter","sortOrder","startName","endName","updateEditorCellDateData"],"mappings":"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"}