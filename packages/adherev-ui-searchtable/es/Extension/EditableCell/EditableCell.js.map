{"version":3,"file":"EditableCell.js","sources":["Extension/EditableCell/EditableCell.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.define-properties.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { __assign } from \"tslib\";\nimport Util from '@baifendian/adherev-util';\nimport EditableCellEdit from './Edit/EditableCellEdit';\nimport EditableCellView from './View';\nvar cloneElement = Util._util.cloneElement;\n/**\n * EditableCell\n * @description 可编辑的单元格\n */\nexport default {\n  inject: ['getActiveValue', 'setActiveValue'],\n  data: function data() {\n    var _a, _b, _c;\n    return {\n      $editableCell: {\n        defaultConfig: {\n          editable: false,\n          defaultStatus: 'view',\n          type: 'input',\n          props: {},\n          formItemProps: {},\n          useTrigger: true,\n          require: true,\n          dataIndex: (_a = this.column) === null || _a === void 0 ? void 0 : _a.dataIndex,\n          useKeepEdit: false\n        },\n        watchHandler: []\n      },\n      editableCell: {\n        status: ((_c = (_b = this.column) === null || _b === void 0 ? void 0 : _b.$editable) === null || _c === void 0 ? void 0 : _c.defaultStatus) || 'view'\n      }\n    };\n  },\n  computed: {\n    editableCellEditableConfig: function editableCellEditableConfig() {\n      var _a;\n      return __assign(__assign({}, this.$data.$editableCell.defaultConfig), ((_a = this.column) === null || _a === void 0 ? void 0 : _a.$editable) || {});\n    }\n  },\n  created: function created() {\n    var $editableCell = this.$data.$editableCell;\n    $editableCell.watchHandler.push(this.$watch(function () {\n      var _a, _b, _c;\n      return (_c = (_b = (_a = this.getContext) === null || _a === void 0 ? void 0 : _a.call(this)) === null || _b === void 0 ? void 0 : _b.context) === null || _c === void 0 ? void 0 : _c.getData();\n    }, function () {\n      this.editableCell.status = this.editableCellEditableConfig.defaultStatus;\n    }));\n    $editableCell.watchHandler.push(this.$watch(function () {\n      var _a, _b;\n      return (_b = (_a = this.column) === null || _a === void 0 ? void 0 : _a.$editable) === null || _b === void 0 ? void 0 : _b.defaultStatus;\n    }, function () {\n      this.editableCell.status = this.editableCellEditableConfig.defaultStatus;\n    }));\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$data.$editableCell.watchHandler.forEach(function (handler) {\n      return handler();\n    });\n  },\n  methods: {\n    /**\n     * useEditableCell\n     * @description 固定调用的处理函数\n     * @param h\n     * @param tdVNode\n     */\n    useEditableCell: function useEditableCell(h, tdVNode) {\n      var _this = this;\n      var res = tdVNode;\n      var _a = this,\n        _b = _a.editableCellEditableConfig,\n        editable = _b.editable,\n        useKeepEdit = _b.useKeepEdit,\n        status = _a.editableCell.status;\n      // 单元格不是可编辑的单元格\n      if (!editable) {\n        res = tdVNode;\n      }\n      // 始终保持编辑状态\n      else if (useKeepEdit) {\n        res = cloneElement(tdVNode, {\n          children: [// @ts-ignore\n          h(EditableCellEdit, {\n            \"props\": _objectSpread({}, this.$props),\n            \"attrs\": {\n              \"editableConfig\": this.editableCellEditableConfig\n            },\n            \"on\": {\n              \"triggerChange\": function triggerChange() {\n                _this.setActiveValue('');\n                _this.editableCell.status = 'view';\n              }\n            }\n          }, [tdVNode.children])]\n        });\n      }\n      // 查看状态\n      else if (status === 'view') {\n        res = cloneElement(tdVNode, {\n          children: [// @ts-ignore\n          h(EditableCellView, {\n            \"props\": _objectSpread({}, this.$props),\n            \"attrs\": {\n              \"editableConfig\": this.editableCellEditableConfig\n            },\n            \"on\": {\n              \"triggerChange\": function triggerChange() {\n                _this.setActiveValue(_this.record[_this.column.dataIndex]);\n                _this.editableCell.status = 'edit';\n              }\n            }\n          }, [tdVNode.children])]\n        });\n      }\n      // 编辑状态\n      else if (status === 'edit') {\n        res = cloneElement(tdVNode, {\n          children: [// @ts-ignore\n          h(EditableCellEdit, {\n            \"props\": _objectSpread({}, this.$props),\n            \"attrs\": {\n              \"editableConfig\": this.editableCellEditableConfig\n            },\n            \"on\": {\n              \"triggerChange\": function triggerChange() {\n                _this.setActiveValue('');\n                _this.editableCell.status = 'view';\n              }\n            }\n          }, [tdVNode.children])]\n        });\n      }\n      return res;\n    }\n  }\n};"],"names":["_defineProperty","ownKeys","object","enumerableOnly","symbols","keys","Object","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","__assign","Util","EditableCellEdit","EditableCellView","cloneElement","_util","inject","data","_c","$editableCell","defaultConfig","editable","defaultStatus","type","props","formItemProps","useTrigger","require","dataIndex","_a","this","column","useKeepEdit","watchHandler","editableCell","status","_b","$editable","computed","editableCellEditableConfig","$data","created","$watch","getContext","call","context","getData","beforeDestroy","handler","methods","useEditableCell","h","tdVNode","_this","res","children","$props","attrs","editableConfig","on","triggerChange","setActiveValue","record"],"mappings":"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"}