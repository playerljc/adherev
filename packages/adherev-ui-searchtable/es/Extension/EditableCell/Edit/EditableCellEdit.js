import _mergeJSXProps from"@vue/babel-helper-vue-jsx-merge-props";import"core-js/modules/es.number.constructor.js";import"core-js/modules/es.array.reduce.js";import"core-js/modules/es.object.to-string.js";import{__assign}from"tslib";import{Form,Icon}from"ant-design-vue";import moment from"moment";import{selectorPrefix}from"../../../SearchTable";import EventTypes from"../EventTypes";import FormItemGenerator from"./FormItemGenerator";export default{props:{rowIndex:{type:Number},record:{type:Object},column:{type:Object},columns:{type:Array},editableConfig:{type:Object}},emits:["triggerChange"],inject:["getEditableRowFormIns","getContext"],methods:{updateEditorCellData:function(){var e,t=this.editableConfig.dataIndex,r=this.record,n=this.getValue();return n instanceof moment?null==(e=null==(e=null==(e=this.getContext)?void 0:e.call(this))?void 0:e.context)?void 0:e.updateEditorCellDateData({record:r,dataIndex:t,value:n}):null==(e=null==(e=null==(e=this.getContext)?void 0:e.call(this))?void 0:e.context)?void 0:e.updateEditorCellDate({record:r,dataIndex:t,value:n})},renderFormItem:function(){var r=this,e=this.editableConfig,t=e.useKeepEdit,n=e.dataIndex,i=e.type,o=e.render,l=e.dictName,e=e.renderChildren,d=this.rowIndex,a=this.record,s=this.getEditableRowFormIns(),t=__assign(__assign({autoFocus:!t},this.editableConfig.props),EventTypes.reduce(function(e,t){return e[t]=function(e){r.editableConfig.props[t]&&r.editableConfig.props[t](e,{form:s,dataIndex:n,rowIndex:d,updateEditorCellData:function(){return r.updateEditorCellData()}})},e},{})),i=FormItemGenerator.render({type:i,props:t,dictName:l,renderChildren:e,form:s,dataIndex:n,rowIndex:d}),t=null==(e=null==(l=null==(t=this.getContext)?void 0:t.call(this))?void 0:l.context)?void 0:e.$scopedSlots,l={value:null==a?void 0:a[n],record:a,dataIndex:n,rowIndex:d,form:s,updateEditorCellData:function(){return r.updateEditorCellData()},children:i};return(null==(e=null==t?void 0:t[o])?void 0:e.call(t,l))||(null==o?void 0:o(l))||i},onSaveTrigger:function(){var t=this,e=this.editableConfig,r=e.dataIndex,n=e.onSave,i=this.rowIndex,o=this.record,e=this.getEditableRowFormIns(),l=this.getValue();null!=e&&e.validateFields().then(function(e){n?null!=(e=n({value:l,values:e,record:o,dataIndex:r,rowIndex:i}))&&e.then(function(){return t.$emit("triggerChange")}):t.$emit("triggerChange")})},renderDefaultSaveTrigger:function(){return h(Icon,{attrs:{type:"check"}})},onCancelTrigger:function(){var e=this,t=this.editableConfig,r=t.dataIndex,t=t.onBeforeCancel,n=this.rowIndex,i=this.record,o=this.getValue();t?null!=(t=t({value:o,record:i,dataIndex:r,rowIndex:n}))&&t.then(function(){return e.$emit("triggerChange")}):this.$emit("triggerChange")},renderDefaultCancelTrigger:function(){return h(Icon,{attrs:{type:"close"}})},getValue:function(){var e;return null==(e=null==(e=this.getEditableRowFormIns)?void 0:e.call(this))?void 0:e.getFieldValue(this.editableConfig.dataIndex)}},render:function(){var e=this,t=this.editableConfig,r=t.useTrigger,n=t.useKeepEdit,i=t.renderSaveTrigger,o=t.renderCancelTrigger,l=t.dataIndex,d=t.type,a=t.render,s=t.rules,t=t.formItemProps,c=this.record,u=this.rowIndex,g=null==(g=null==(g=this.getContext)?void 0:g.call(this))?void 0:g.context,g=null==g?void 0:g.$scopedSlots,m=this.getEditableRowFormIns(),m={value:null==c?void 0:c[l],record:c,dataIndex:l,rowIndex:u,form:m,updateEditorCellData:function(){return e.updateEditorCellData()}},v={value:null==c?void 0:c[l],record:c,dataIndex:l,rowIndex:u},c={value:null==c?void 0:c[l],record:c,dataIndex:l,rowIndex:u};return h("div",{class:"".concat(selectorPrefix,"-editablecell-edit")},[h("div",{class:"".concat(selectorPrefix,"-editablecell-edit-inner")},[h(Form.Item,_mergeJSXProps([{attrs:{name:l,rules:s}},t||{}]),["custom"!==d?this.renderFormItem():(null==(u=null==g?void 0:g[a])?void 0:u.call(g,m))||(null==a?void 0:a(m))])]),!!r&&!n&&h("div",{class:"".concat(selectorPrefix,"-editablecell-edit-trigger")},[h("div",{class:"".concat(selectorPrefix,"-editablecell-edit-trigger-inner")},[h("div",{class:"".concat(selectorPrefix,"-editablecell-edit-trigger-save"),on:{click:this.onSaveTrigger}},[(null==(l=null==g?void 0:g[i])?void 0:l.call(g,v))||(null==i?void 0:i(v))||this.renderDefaultSaveTrigger()]),h("div",{class:"".concat(selectorPrefix,"-editablecell-edit-trigger-cancel"),on:{click:this.onCancelTrigger}},[(null==(s=null==g?void 0:g[o])?void 0:s.call(g,c))||(null==o?void 0:o(c))||this.renderDefaultCancelTrigger()])])])])}};
//# sourceMappingURL=EditableCellEdit.js.map
