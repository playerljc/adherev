{"version":3,"file":"PlayGroundTab.js","sources":["PlayGroundTab.js"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { __assign } from \"tslib\";\nimport ConditionalRender from '@baifendian/adherev-ui-conditionalrender';\nimport Card from './Card';\nimport CodeTabPanel, { CodeTabPanelDefaultProps } from './CodeTabPanel';\nimport PlayGroundMixins, { PlaygroundMixinsProps } from './PlayGroundMixins';\n// const selectPrefix = 'adherev-ui-playground-tab';\nexport var PlayGroundTabPropTypes = __assign(__assign({}, PlaygroundMixinsProps), CodeTabPanelDefaultProps);\nvar PlayGroundTab = {\n  name: 'adv-playground-tab',\n  mixins: [PlayGroundMixins],\n  props: __assign({}, PlayGroundTabPropTypes),\n  data: function data() {\n    return {\n      activeKey: this.active\n    };\n  },\n  watch: {\n    activeKey: function activeKey(_activeKey) {\n      this.activeKey = _activeKey;\n    }\n  },\n  methods: {\n    getClipboardText: function getClipboardText() {\n      var _a;\n      var _b = this,\n        config = _b.config,\n        activeKey = _b.activeKey;\n      return Promise.resolve((_a = config.find(function (c) {\n        return c.key === activeKey;\n      })) === null || _a === void 0 ? void 0 : _a.codeText);\n    },\n    renderCodeView: function renderCodeView(h) {\n      var _this = this;\n      var _a = this,\n        expand = _a.expand,\n        config = _a.config;\n      return h(ConditionalRender.Show, {\n        \"attrs\": {\n          \"conditional\": expand\n        }\n      }, [h(Card, [h(CodeTabPanel, {\n        \"attrs\": {\n          \"config\": config,\n          \"active\": this.activeKey\n        },\n        \"on\": {\n          \"change\": function change(key) {\n            _this.activeKey = key;\n          }\n        }\n      })])]);\n    }\n  }\n};\nexport default PlayGroundTab;"],"names":["__assign","ConditionalRender","Card","CodeTabPanel","CodeTabPanelDefaultProps","PlayGroundMixins","PlaygroundMixinsProps","PlayGroundTabPropTypes","PlayGroundTab","name","mixins","props","data","activeKey","this","active","watch","_activeKey","methods","getClipboardText","config","Promise","resolve","_a","find","c","key","codeText","renderCodeView","h","_this","expand","Show","attrs","conditional","on","change"],"mappings":"MAAO,+CACA,sCACA,0CACEA,QAAuB,KAAP,eAClBC,sBAAuB,kDACvBC,SAAU,gBACVC,cAAgBC,wBAAgD,KAAhB,wBAChDC,kBAAoBC,qBAAiD,KAApB,qBAEjD,IAAIC,uBAAyBP,SAASA,SAAS,GAAIM,qBAAqB,EAAGF,wBAAwB,EACtGI,cAAgB,CAClBC,KAAM,qBACNC,OAAQ,CAACL,kBACTM,MAAOX,SAAS,GAAIO,sBAAsB,EAC1CK,KAAM,WACJ,MAAO,CACLC,UAAWC,KAAKC,MAClB,CACF,EACAC,MAAO,CACLH,UAAW,SAAmBI,GAC5BH,KAAKD,UAAYI,CACnB,CACF,EACAC,QAAS,CACPC,iBAAkB,WAChB,IAEEC,EADON,KACKM,OACZP,EAFOC,KAEQD,UACjB,OAAOQ,QAAQC,QAAQ,OAACC,EAAKH,EAAOI,KAAK,SAAUC,GACjD,OAAOA,EAAEC,MAAQb,CACnB,CAAC,GAA+B,KAAA,EAASU,EAAGI,QAAQ,CACtD,EACAC,eAAgB,SAAwBC,GACtC,IAAIC,EAAQhB,KAEViB,EADOjB,KACKiB,OACZX,EAFON,KAEKM,OACd,OAAOS,EAAE5B,kBAAkB+B,KAAM,CAC/BC,MAAS,CACPC,YAAeH,CACjB,CACF,EAAG,CAACF,EAAE3B,KAAM,CAAC2B,EAAE1B,aAAc,CAC3B8B,MAAS,CACPb,OAAUA,EACVL,OAAUD,KAAKD,SACjB,EACAsB,GAAM,CACJC,OAAU,SAAgBV,GACxBI,EAAMjB,UAAYa,CACpB,CACF,CACF,CAAC,EAAE,EAAE,CACP,CACF,CACF,iBACelB,qBAhDJD,sBAgDiB"}