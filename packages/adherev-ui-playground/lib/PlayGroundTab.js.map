{"version":3,"file":"PlayGroundTab.js","sources":["PlayGroundTab.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.promise.js\");\nrequire(\"core-js/modules/es.array.find.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlayGroundTabPropTypes = void 0;\nvar tslib_1 = require(\"tslib\");\nvar adherev_ui_conditionalrender_1 = tslib_1.__importDefault(require(\"@baifendian/adherev-ui-conditionalrender\"));\nvar Card_1 = tslib_1.__importDefault(require(\"./Card\"));\nvar CodeTabPanel_1 = tslib_1.__importStar(require(\"./CodeTabPanel\"));\nvar PlayGroundMixins_1 = tslib_1.__importStar(require(\"./PlayGroundMixins\"));\n// const selectPrefix = 'adherev-ui-playground-tab';\nexports.PlayGroundTabPropTypes = tslib_1.__assign(tslib_1.__assign({}, PlayGroundMixins_1.PlaygroundMixinsProps), CodeTabPanel_1.CodeTabPanelDefaultProps);\nvar PlayGroundTab = {\n  name: 'adv-playground-tab',\n  mixins: [PlayGroundMixins_1.default],\n  props: tslib_1.__assign({}, exports.PlayGroundTabPropTypes),\n  data: function data() {\n    return {\n      activeKey: this.active\n    };\n  },\n  watch: {\n    activeKey: function activeKey(_activeKey) {\n      this.activeKey = _activeKey;\n    }\n  },\n  methods: {\n    getClipboardText: function getClipboardText() {\n      var _a;\n      var _b = this,\n        config = _b.config,\n        activeKey = _b.activeKey;\n      return Promise.resolve((_a = config.find(function (c) {\n        return c.key === activeKey;\n      })) === null || _a === void 0 ? void 0 : _a.codeText);\n    },\n    renderCodeView: function renderCodeView(h) {\n      var _this = this;\n      var _a = this,\n        expand = _a.expand,\n        config = _a.config;\n      return h(adherev_ui_conditionalrender_1.default.Show, {\n        \"attrs\": {\n          \"conditional\": expand\n        }\n      }, [h(Card_1.default, [h(CodeTabPanel_1.default, {\n        \"attrs\": {\n          \"config\": config,\n          \"active\": this.activeKey\n        },\n        \"on\": {\n          \"change\": function change(key) {\n            _this.activeKey = key;\n          }\n        }\n      })])]);\n    }\n  }\n};\nexports.default = PlayGroundTab;"],"names":["require","Object","defineProperty","exports","value","PlayGroundTabPropTypes","tslib_1","adherev_ui_conditionalrender_1","__importDefault","Card_1","CodeTabPanel_1","__importStar","PlayGroundMixins_1","PlayGroundTab","__assign","PlaygroundMixinsProps","CodeTabPanelDefaultProps","name","mixins","default","props","data","activeKey","this","active","watch","_activeKey","methods","getClipboardText","config","Promise","resolve","_a","find","c","key","codeText","renderCodeView","h","_this","expand","Show","attrs","conditional","on","change"],"mappings":"AAAA,aAEAA,QAAQ,8CAA8C,EACtDA,QAAQ,wCAAwC,EAChDA,QAAQ,+BAA+B,EACvCA,QAAQ,kCAAkC,EAC1CC,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,MAAO,CAAA,CACT,CAAC,EACDD,QAAQE,uBAAyB,KAAA,EACjC,IAAIC,QAAUN,QAAQ,OAAO,EACzBO,+BAAiCD,QAAQE,gBAAgBR,QAAQ,0CAA0C,CAAC,EAC5GS,OAASH,QAAQE,gBAAgBR,QAAQ,QAAQ,CAAC,EAClDU,eAAiBJ,QAAQK,aAAaX,QAAQ,gBAAgB,CAAC,EAC/DY,mBAAqBN,QAAQK,aAAaX,QAAQ,oBAAoB,CAAC,EAGvEa,eADJV,QAAQE,uBAAyBC,QAAQQ,SAASR,QAAQQ,SAAS,GAAIF,mBAAmBG,qBAAqB,EAAGL,eAAeM,wBAAwB,EACrI,CAClBC,KAAM,qBACNC,OAAQ,CAACN,mBAAmBO,SAC5BC,MAAOd,QAAQQ,SAAS,GAAIX,QAAQE,sBAAsB,EAC1DgB,KAAM,WACJ,MAAO,CACLC,UAAWC,KAAKC,MAClB,CACF,EACAC,MAAO,CACLH,UAAW,SAAmBI,GAC5BH,KAAKD,UAAYI,CACnB,CACF,EACAC,QAAS,CACPC,iBAAkB,WAChB,IAEEC,EADON,KACKM,OACZP,EAFOC,KAEQD,UACjB,OAAOQ,QAAQC,QAAQ,OAACC,EAAKH,EAAOI,KAAK,SAAUC,GACjD,OAAOA,EAAEC,MAAQb,CACnB,CAAC,GAA+B,KAAA,EAASU,EAAGI,QAAQ,CACtD,EACAC,eAAgB,SAAwBC,GACtC,IAAIC,EAAQhB,KAEViB,EADOjB,KACKiB,OACZX,EAFON,KAEKM,OACd,OAAOS,EAAE/B,+BAA+BY,QAAQsB,KAAM,CACpDC,MAAS,CACPC,YAAeH,CACjB,CACF,EAAG,CAACF,EAAE7B,OAAOU,QAAS,CAACmB,EAAE5B,eAAeS,QAAS,CAC/CuB,MAAS,CACPb,OAAUA,EACVL,OAAUD,KAAKD,SACjB,EACAsB,GAAM,CACJC,OAAU,SAAgBV,GACxBI,EAAMjB,UAAYa,CACpB,CACF,CACF,CAAC,EAAE,EAAE,CACP,CACF,CACF,GACAhC,QAAQgB,QAAUN"}