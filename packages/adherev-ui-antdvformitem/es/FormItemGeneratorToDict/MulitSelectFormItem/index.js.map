{"version":3,"file":"index.js","sources":["FormItemGeneratorToDict/MulitSelectFormItem/index.js"],"sourcesContent":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { __assign } from \"tslib\";\nimport { Select as AntdvSelect } from 'ant-design-vue';\nimport { MultipleSelect } from '../../AntdvFormItemNormalize';\nvar Option = AntdvSelect.Option;\nexport default {\n  name: 'MulitSelectFormItem',\n  emits: ['change'],\n  props: {\n    selectProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    targetValue: function targetValue() {\n      var _this = this;\n      if (!Array.isArray(this.value)) return [];\n      return this.value.filter(function (_value) {\n        var _a;\n        return (_a = _this.dataSource) === null || _a === void 0 ? void 0 : _a.find(function (t) {\n          return t.value === _value;\n        });\n      });\n    }\n  },\n  watch: {\n    value: function value(_value2) {\n      var _this = this;\n      if (!Array.isArray(_value2)) {\n        this.$emit('change', []);\n        return;\n      }\n      var filterValue = _value2.filter(function (_value) {\n        var _a;\n        return (_a = _this.dataSource) === null || _a === void 0 ? void 0 : _a.find(function (t) {\n          return t.value === _value;\n        });\n      });\n      if (filterValue.length !== _value2.length) {\n        this.$emit('change', filterValue);\n      }\n    }\n  },\n  render: function render(h) {\n    return h(MultipleSelect, _mergeJSXProps([{}, {\n      props: __assign(__assign({}, this.selectProps), {\n        value: this.targetValue\n      }),\n      attrs: this.$attrs,\n      scopedSlots: this.$scopedSlots,\n      on: this.$listeners\n    }]), [this.dataSource.map(function (item) {\n      return h(Option, {\n        \"key\": item.value,\n        \"attrs\": {\n          \"value\": item.value\n        }\n      }, [item.label]);\n    })]);\n  }\n};"],"names":["_mergeJSXProps","__assign","AntdvSelect","MultipleSelect","Option","name","emits","props","selectProps","type","Object","default","value","Array","dataSource","computed","targetValue","_this","this","isArray","filter","_value","_a","find","t","watch","_value2","filterValue","length","$emit","render","h","attrs","$attrs","scopedSlots","$scopedSlots","on","$listeners","map","item","key","label"],"mappings":"OAAOA,mBAAoB,8CACpB,2CACA,+CACA,yCACA,yCACEC,QAAuB,KAAP,eACNC,qBAAmC,KAAhB,wBAC7BC,cAAoD,KAA9B,+BAC/B,IAAIC,OAASF,YAAYE,qBACV,CACbC,KAAM,sBACNC,MAAO,CAAC,UACRC,MAAO,CACLC,YAAa,CACXC,KAAMC,OACNC,QAAS,WACP,MAAO,EACT,CACF,EACAC,MAAO,CACLH,KAAMI,MACNF,QAAS,WACP,MAAO,EACT,CACF,EACAG,WAAY,CACVL,KAAMI,MACNF,QAAS,WACP,MAAO,EACT,CACF,CACF,EACAI,SAAU,CACRC,YAAa,WACX,IAAIC,EAAQC,KACZ,OAAKL,MAAMM,QAAQD,KAAKN,KAAK,EACtBM,KAAKN,MAAMQ,OAAO,SAAUC,GACjC,IAAIC,EACJ,OAAO,OAACA,EAAKL,EAAMH,YAAwC,KAAA,EAASQ,EAAGC,KAAK,SAAUC,GACpF,OAAOA,EAAEZ,QAAUS,CACrB,CAAC,CACH,CAAC,EANsC,EAOzC,CACF,EACAI,MAAO,CACLb,MAAO,SAAec,GACpB,IAKIC,EALAV,EAAQC,KACPL,MAAMM,QAAQO,CAAO,GAItBC,EAAcD,EAAQN,OAAO,SAAUC,GACzC,IAAIC,EACJ,OAAO,OAACA,EAAKL,EAAMH,YAAwC,KAAA,EAASQ,EAAGC,KAAK,SAAUC,GACpF,OAAOA,EAAEZ,QAAUS,CACrB,CAAC,CACH,CAAC,GACeO,SAAWF,EAAQE,QACjCV,KAAKW,MAAM,SAAUF,CAAW,EAVhCT,KAAKW,MAAM,SAAU,EAAE,CAY3B,CACF,EACAC,OAAQ,SAAgBC,GACtB,OAAOA,EAAE5B,eAAgBH,eAAe,CAAC,GAAI,CAC3CO,MAAON,SAASA,SAAS,GAAIiB,KAAKV,WAAW,EAAG,CAC9CI,MAAOM,KAAKF,WACd,CAAC,EACDgB,MAAOd,KAAKe,OACZC,YAAahB,KAAKiB,aAClBC,GAAIlB,KAAKmB,UACX,EAAE,EAAG,CAACnB,KAAKJ,WAAWwB,IAAI,SAAUC,GAClC,OAAOR,EAAE3B,OAAQ,CACfoC,IAAOD,EAAK3B,MACZoB,MAAS,CACPpB,MAAS2B,EAAK3B,KAChB,CACF,EAAG,CAAC2B,EAAKE,MAAM,CACjB,CAAC,EAAE,CACL,CACF"}