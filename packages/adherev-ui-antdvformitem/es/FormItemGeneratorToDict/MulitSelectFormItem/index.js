import _mergeJSXProps from"@vue/babel-helper-vue-jsx-merge-props";import"core-js/modules/es.array.filter.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.array.find.js";import"core-js/modules/es.array.map.js";import{__assign}from"tslib";import{Select as AntdvSelect}from"ant-design-vue";import{MultipleSelect}from"../../AntdvFormItemNormalize";var Option=AntdvSelect.Option;export default{name:"MulitSelectFormItem",emits:["change"],props:{selectProps:{type:Object,default:function(){return{}}},value:{type:Array,default:function(){return[]}},dataSource:{type:Array,default:function(){return[]}}},computed:{targetValue:function(){var r=this;return Array.isArray(this.value)?this.value.filter(function(t){var e;return null==(e=r.dataSource)?void 0:e.find(function(e){return e.value===t})}):[]}},watch:{value:function(e){var t,r=this;Array.isArray(e)?(t=e.filter(function(t){var e;return null==(e=r.dataSource)?void 0:e.find(function(e){return e.value===t})})).length!==e.length&&this.$emit("change",t):this.$emit("change",[])}},render:function(t){return t(MultipleSelect,_mergeJSXProps([{},{props:__assign(__assign({},this.selectProps),{value:this.targetValue}),attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners}]),[this.dataSource.map(function(e){return t(Option,{key:e.value,attrs:{value:e.value}},[e.label])})])}};
//# sourceMappingURL=index.js.map
