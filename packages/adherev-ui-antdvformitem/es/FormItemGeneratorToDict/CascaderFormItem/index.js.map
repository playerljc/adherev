{"version":3,"file":"index.js","sources":["FormItemGeneratorToDict/CascaderFormItem/index.js"],"sourcesContent":["import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { __assign } from \"tslib\";\nimport { Cascader } from 'ant-design-vue';\nexport default {\n  name: 'CascaderFormItem',\n  props: {\n    cascaderProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    targetValue: function targetValue() {\n      var _this = this;\n      if (!Array.isArray(this.value)) return [];\n      return this.value.filter(function (_value) {\n        return _this.$exists(_value);\n      });\n    }\n  },\n  watch: {\n    value: function value(_value2) {\n      var _this = this;\n      if (!Array.isArray(_value2)) {\n        this.$emit('change', []);\n        return;\n      }\n      var filterValue = _value2.filter(function (_value) {\n        return _this.$exists(_value);\n      });\n      if (filterValue.length !== _value2.length) {\n        this.$emit('change', filterValue);\n      }\n    }\n  },\n  methods: {\n    $exists: function $exists(value) {\n      var loop = function loop(dataSource, _val) {\n        var res = null;\n        for (var i = 0; i < dataSource.length; i++) {\n          var item = dataSource[i];\n          if (item.value === _val) {\n            res = item;\n            break;\n          }\n          if ('children' in item && Array.isArray(item.children) && item.children.length) {\n            res = loop(item.children, _val);\n            if (res) {\n              break;\n            }\n          }\n        }\n        return res;\n      };\n      return loop(this.dataSource, value);\n    }\n  },\n  render: function render(h) {\n    return h(Cascader, {\n      props: __assign(__assign({}, this.cascaderProps), {\n        value: this.targetValue,\n        options: this.dataSource\n      }),\n      attrs: this.$attrs,\n      on: this.$listeners,\n      scopedSlots: this.$scopedSlots\n    }, this.$slots.default);\n  }\n};"],"names":["__assign","Cascader","name","props","cascaderProps","type","Object","default","value","Array","dataSource","computed","targetValue","_this","this","isArray","filter","_value","$exists","watch","_value2","filterValue","length","$emit","methods","loop","_val","res","i","item","children","render","h","options","attrs","$attrs","on","$listeners","scopedSlots","$scopedSlots","$slots"],"mappings":"MAAO,2CACA,gDACEA,QAAuB,KAAP,eAChBC,QAAgC,KAAhB,+BACV,CACbC,KAAM,mBACNC,MAAO,CACLC,cAAe,CACbC,KAAMC,OACNC,QAAS,WACP,MAAO,EACT,CACF,EACAC,MAAO,CACLH,KAAMI,MACNF,QAAS,WACP,MAAO,EACT,CACF,EACAG,WAAY,CACVL,KAAMI,MACNF,QAAS,WACP,MAAO,EACT,CACF,CACF,EACAI,SAAU,CACRC,YAAa,WACX,IAAIC,EAAQC,KACZ,OAAKL,MAAMM,QAAQD,KAAKN,KAAK,EACtBM,KAAKN,MAAMQ,OAAO,SAAUC,GACjC,OAAOJ,EAAMK,QAAQD,CAAM,CAC7B,CAAC,EAHsC,EAIzC,CACF,EACAE,MAAO,CACLX,MAAO,SAAeY,GACpB,IAKIC,EALAR,EAAQC,KACPL,MAAMM,QAAQK,CAAO,GAItBC,EAAcD,EAAQJ,OAAO,SAAUC,GACzC,OAAOJ,EAAMK,QAAQD,CAAM,CAC7B,CAAC,GACeK,SAAWF,EAAQE,QACjCR,KAAKS,MAAM,SAAUF,CAAW,EAPhCP,KAAKS,MAAM,SAAU,EAAE,CAS3B,CACF,EACAC,QAAS,CACPN,QAAS,SAAiBV,GAkBxB,OAjBW,SAASiB,EAAKf,EAAYgB,GAEnC,IADA,IAAIC,EAAM,KACDC,EAAI,EAAGA,EAAIlB,EAAWY,OAAQM,CAAC,GAAI,CAC1C,IAAIC,EAAOnB,EAAWkB,GACtB,GAAIC,EAAKrB,QAAUkB,EAAM,CACvBC,EAAME,EACN,KACF,CACA,GAAI,aAAcA,GAAQpB,MAAMM,QAAQc,EAAKC,QAAQ,GAAKD,EAAKC,SAASR,SACtEK,EAAMF,EAAKI,EAAKC,SAAUJ,CAAI,GAE5B,KAGN,CACA,OAAOC,CACT,EACYb,KAAKJ,WAAYF,CAAK,CACpC,CACF,EACAuB,OAAQ,SAAgBC,GACtB,OAAOA,EAAE/B,SAAU,CACjBE,MAAOH,SAASA,SAAS,GAAIc,KAAKV,aAAa,EAAG,CAChDI,MAAOM,KAAKF,YACZqB,QAASnB,KAAKJ,UAChB,CAAC,EACDwB,MAAOpB,KAAKqB,OACZC,GAAItB,KAAKuB,WACTC,YAAaxB,KAAKyB,YACpB,EAAGzB,KAAK0B,OAAOjC,OAAO,CACxB,CACF"}