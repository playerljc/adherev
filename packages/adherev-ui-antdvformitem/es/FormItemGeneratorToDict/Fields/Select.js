import{createVNode as _createVNode}from"vue";import"core-js/modules/es.array.filter.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/es.string.ends-with.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.array.map.js";import"core-js/modules/es.array.from.js";import"core-js/modules/es.string.iterator.js";import"core-js/modules/es.array.iterator.js";import"core-js/modules/es.set.js";import"core-js/modules/esnext.set.add-all.js";import"core-js/modules/esnext.set.delete-all.js";import"core-js/modules/esnext.set.difference.js";import"core-js/modules/esnext.set.every.js";import"core-js/modules/esnext.set.filter.js";import"core-js/modules/esnext.set.find.js";import"core-js/modules/esnext.set.intersection.js";import"core-js/modules/esnext.set.is-disjoint-from.js";import"core-js/modules/esnext.set.is-subset-of.js";import"core-js/modules/esnext.set.is-superset-of.js";import"core-js/modules/esnext.set.join.js";import"core-js/modules/esnext.set.map.js";import"core-js/modules/esnext.set.reduce.js";import"core-js/modules/esnext.set.some.js";import"core-js/modules/esnext.set.symmetric-difference.js";import"core-js/modules/esnext.set.union.js";import"core-js/modules/web.dom-collections.iterator.js";import"core-js/modules/es.array.find.js";import{__assign,__rest,__spreadArray}from"tslib";import debounce from"lodash.debounce";import{defineComponent}from"vue";import{array,number,object,oneOfType,string}from"vue-types";import Dict from"@baifendian/adherev-util-dict";import WatchMemoized from"@baifendian/adherev-util-watchmemoized";import{Spin}from"../../AntdvFormItemNormalize";import CheckAllMulitSelectFormItem from"../CheckAllMulitSelectFormItem";import MulitSelectFormItem from"../MulitSelectFormItem";import SelectFormItem from"../SelectFormItem";var memoized=WatchMemoized.memoized,FormItemComponents={};export default function(){var e=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("Select")}),t=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("DynamicSelect")}),r=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("AutoCompleteSelect")});return e.forEach(function(t){FormItemComponents["".concat(t,"FormItem")]=defineComponent({name:"".concat(t,"FormItem"),props:{cascadeParams:oneOfType([string(),number()]).def(""),selectProps:object().def({}),value:oneOfType([string(),number()]).def("")},emits:["change"],computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(){var e=this,t=this,r=this.$props,r=(r.cascadeParams,__rest(r,["cascadeParams"]));return _createVNode(SelectFormItem,__assign(__assign(__assign({},r),this.$attrs),{dataSource:this.dataSource,onChange:function(e){return t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}}),FormItemComponents["".concat(t,"MulitFormItem")]=defineComponent({name:"".concat(t,"MulitFormItem"),props:{cascadeParams:oneOfType([string(),number()]).def(""),selectProps:object().def({}),value:array().def([])},emits:["change"],computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(){var e=this,t=this,r=this.$props,r=(r.cascadeParams,__rest(r,["cascadeParams"]));return _createVNode(MulitSelectFormItem,__assign(__assign(__assign({dataSource:this.dataSource},r),this.$attrs),{onChange:function(e){return t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}}),FormItemComponents["".concat(t,"CheckAllMulitFormItem")]=defineComponent({name:"".concat(t,"CheckAllMulitFormItem"),props:{cascadeParams:oneOfType([string(),number()]).def(""),selectProps:object().def({}),value:array().def([])},emits:["change"],computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(){var e=this,t=this,r=this.$props,r=(r.cascadeParams,__rest(r,["cascadeParams"]));return _createVNode(CheckAllMulitSelectFormItem,__assign(__assign(__assign({},r),this.$attrs),{dataSource:this.dataSource,onCheckAllChange:function(e){t.$emit("change",e?t.dataSource.map(function(e){return e.value}):[])},onChange:function(e){return t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}})}),t.forEach(function(r){FormItemComponents["".concat(r,"FormItem")]=defineComponent({name:"".concat(r,"FormItem"),props:{cascadeParams:oneOfType([string(),number()]).def(""),selectProps:object().def({}),value:oneOfType([string(),number()]).def("")},emits:["change"],data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(){var e=this,t=this,r=this.$props,r=(r.cascadeParams,__rest(r,["cascadeParams"]));return _createVNode(SelectFormItem,__assign(__assign(__assign({dataSource:this.dataSource},r),this.$attrs),{onChange:function(e){return t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}}),FormItemComponents["".concat(r,"MulitFormItem")]=defineComponent({name:"".concat(r,"MulitFormItem"),props:{cascadeParams:oneOfType([string(),number()]).def(""),selectProps:object().def({}),value:oneOfType([string(),number()]).def("")},emits:["change"],data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(){var e=this,t=this,r=this.$props,r=(r.cascadeParams,__rest(r,["cascadeParams"]));return _createVNode(MulitSelectFormItem,__assign(__assign(__assign({dataSource:this.dataSource},r),this.$attrs),{onChange:function(e){return t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}}),FormItemComponents["".concat(r,"CheckAllMulitFormItem")]=defineComponent({name:"".concat(r,"CheckAllMulitFormItem"),props:{cascadeParams:oneOfType([string(),number()]).def(""),selectProps:object().def({}),value:oneOfType([string(),number()]).def("")},emits:["change"],data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(){var e=this,t=this,r=this.$props,r=(r.cascadeParams,__rest(r,["cascadeParams"]));return _createVNode(CheckAllMulitSelectFormItem,__assign(__assign(__assign({dataSource:this.dataSource,onCheckAllChange:function(e){t.$emit("change",e?t.dataSource.map(function(e){return e.value}):[])}},r),this.$attrs),{onChange:function(e){return t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}})}),r.forEach(function(r){FormItemComponents["".concat(r,"FormItem")]=defineComponent({name:"".concat(r,"FormItem"),props:{selectProps:object().def({}),value:oneOfType([string(),number()]).def(""),debounceTimeout:number().def(300)},emits:["change"],data:function(){return{fetching:!1,dataSource:[],$debounceFetcher:this.$createDebounceFetcher(),$fetchRef:0}},methods:{$createDebounceFetcher:function(){var n=this;return debounce(memoized.createMemoFun(function(e){n.$data.$fetchRef+=1;var t=n.$data.$fetchRef;e?(0,Dict.value[r].value)(e).then(function(e){var r;t===n.$data.$fetchRef&&(r=__spreadArray(__spreadArray([],e,!0),n.dataSource.filter(function(e){return e.value===n.value}),!0),n.dataSource=__spreadArray([],Array.from(new Set(r.map(function(e){return e.value}))),!0).map(function(t){return r.find(function(e){return e.value===t})}),n.fetching=!1)}):(n.dataSource=n.dataSource.filter(function(e){return e.value===n.value}),n.fetching=!1)}),this.debounceTimeout||300)}},watch:{debounceTimeout:function(){this.$data.$debounceFetcher=this.$createDebounceFetcher(),this.$forceUpdate()}},render:function(){var e=this,t=this;return _createVNode(SelectFormItem,__assign({selectProps:__assign({notFoundContent:this.fetching?_createVNode(Spin,{size:"small"},null):null,filterOption:!1,showArrow:!1,defaultActiveFirstOption:!1},this.selectProps),value:this.value,dataSource:this.dataSource,onSearch:this.$data.$debounceFetcher,onChange:function(e){e||(t.dataSource=[],t.fetching=!1),t.$emit("change",e)}},this.$attrs),{default:function(){return[e.$slots]}})}}),FormItemComponents["".concat(r,"MulitFormItem")]=defineComponent({name:"".concat(r,"MulitFormItem"),props:{selectProps:object().def({}),value:array().def([]),debounceTimeout:number().def(300)},emits:["change"],data:function(){return{fetching:!1,dataSource:[],$debounceFetcher:this.$createDebounceFetcher(),$fetchRef:0}},methods:{$createDebounceFetcher:function(){var n=this;return debounce(memoized.createMemoFun(function(e){n.$data.$fetchRef+=1;var t=n.$data.$fetchRef;!e||Array.isArray(e)&&!e.length?(n.dataSource=n.dataSource.filter(function(t){return Array.isArray(n.value)?!!n.value.find(function(e){return e===t.value}):t.value===n.value}),n.fetching=!1):(0,Dict.value[r].value)(e).then(function(e){var r;t===n.$data.$fetchRef&&(r=__spreadArray(__spreadArray([],e,!0),n.dataSource.filter(function(t){return Array.isArray(n.value)?!!n.value.find(function(e){return e===t.value}):t.value===n.value}),!0),n.dataSource=__spreadArray([],Array.from(new Set(r.map(function(e){return e.value}))),!0).map(function(t){return r.find(function(e){return e.value===t})}),n.fetching=!1)})}),this.debounceTimeout||300)}},watch:{debounceTimeout:function(){this.$data.$debounceFetcher=this.$createDebounceFetcher(),this.$forceUpdate()}},render:function(){var e=this,t=this;return _createVNode(MulitSelectFormItem,__assign(__assign({selectProps:__assign({notFoundContent:this.fetching?_createVNode(Spin,{size:"small"},null):null,filterOption:!1,showArrow:!1,defaultActiveFirstOption:!1},this.selectProps),value:this.value,dataSource:this.dataSource},this.$attrs),{onSearch:this.$data.$debounceFetcher,onChange:function(e){e&&(!Array.isArray(e)||e.length)||(t.dataSource=[],t.fetching=!1),t.$emit("change",e)}}),{default:function(){return[e.$slots]}})}}),FormItemComponents["".concat(r,"CheckAllMulitFormItem")]=defineComponent({name:"".concat(r,"CheckAllMulitFormItem"),props:{selectProps:object().def({}),value:array().def([]),debounceTimeout:number().def(300)},emits:["change"],data:function(){return{fetching:!1,dataSource:[],$debounceFetcher:this.$createDebounceFetcher(),$fetchRef:0}},methods:{$createDebounceFetcher:function(){var n=this;return debounce(memoized.createMemoFun(function(e){n.$data.$fetchRef+=1;var t=n.$data.$fetchRef;!e||Array.isArray(e)&&!e.length?(n.dataSource=n.dataSource.filter(function(t){return Array.isArray(n.value)?!!n.value.find(function(e){return e===t.value}):t.value===n.value}),n.fetching=!1):(0,Dict.value[r].value)(e).then(function(e){var r;t===n.$data.$fetchRef&&(r=__spreadArray(__spreadArray([],e,!0),n.dataSource.filter(function(t){return Array.isArray(n.value)?!!n.value.find(function(e){return e===t.value}):t.value===n.value}),!0),n.dataSource=__spreadArray([],Array.from(new Set(r.map(function(e){return e.value}))),!0).map(function(t){return r.find(function(e){return e.value===t})}),n.fetching=!1)})}),this.debounceTimeout||300)}},watch:{debounceTimeout:function(){this.$data.$debounceFetcher=this.$createDebounceFetcher(),this.$forceUpdate()}},render:function(){var e=this,t=this;return _createVNode(CheckAllMulitSelectFormItem,__assign(__assign({selectProps:__assign({notFoundContent:this.fetching?_createVNode(Spin,{size:"small"},null):null,filterOption:!1,showArrow:!1,defaultActiveFirstOption:!1},this.selectProps),value:this.value,dataSource:this.dataSource},this.$attrs),{onSearch:this.$data.$debounceFetcher,onChange:function(e){e&&(!Array.isArray(e)||e.length)||(t.dataSource=[],t.fetching=!1),t.$emit("change",e)},onCheckAllChange:function(e){t.$emit("change",e?t.dataSource.map(function(e){return e.value}):[])}}),{default:function(){return[e.$slots]}})}})}),FormItemComponents}
//# sourceMappingURL=Select.js.map
