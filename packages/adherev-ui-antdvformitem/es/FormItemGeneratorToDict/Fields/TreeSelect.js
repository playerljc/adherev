import"core-js/modules/es.array.filter.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/es.string.ends-with.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.number.constructor.js";import Util from"@baifendian/adherev-util";import Dict from"@baifendian/adherev-util-dict";import TreeMulitSelectFormItem from"../TreeMulitSelectFormItem";import TreeSelectFormItem from"../TreeSelectFormItem";import TreeSelectLeafFormItem from"../TreeSelectLeafFormItem";import TreeSelectLeafMulitFormItem from"../TreeSelectLeafMulitFormItem";var FormItemComponents={},getComponentPropsOption=Util._util.getComponentPropsOption;export default function(){var e=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("Tree")}),t=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("DynamicTree")});return e.forEach(function(t){FormItemComponents["".concat(t,"FormItem")]={name:"".concat(t,"FormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectFormItem.props.treeSelectProps,value:TreeSelectFormItem.props.value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(TreeSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(t,"LeafFormItem")]={name:"".concat(t,"LeafFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectLeafFormItem.props.treeSelectProps,value:TreeSelectLeafFormItem.props.value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(TreeSelectLeafFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(t,"MulitFormItem")]={name:"".concat(t,"MulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:getComponentPropsOption(TreeMulitSelectFormItem).treeSelectProps,value:getComponentPropsOption(TreeMulitSelectFormItem).value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(TreeMulitSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(t,"LeafMulitFormItem")]={name:"".concat(t,"LeafMulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectLeafMulitFormItem.props.treeSelectProps,value:TreeSelectLeafMulitFormItem.props.value},computed:{dataSource:function(){var e=Dict.value[t].value;return e instanceof Function?e(this.cascadeParams):e}},render:function(e){return e(TreeSelectLeafMulitFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}}}),t.forEach(function(r){FormItemComponents["".concat(r,"FormItem")]={name:"".concat(r,"FormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectFormItem.props.treeSelectProps,value:TreeSelectFormItem.props.value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(TreeSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(r,"LeafFormItem")]={name:"".concat(r,"LeafFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectLeafFormItem.props.treeSelectProps,value:TreeSelectLeafFormItem.props.value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(TreeSelectLeafFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(r,"MulitFormItem")]={name:"".concat(r,"MulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:getComponentPropsOption(TreeMulitSelectFormItem).treeSelectProps,value:getComponentPropsOption(TreeMulitSelectFormItem).value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(TreeMulitSelectFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}},FormItemComponents["".concat(r,"LeafMulitFormItem")]={name:"".concat(r,"LeafMulitFormItem"),props:{cascadeParams:{type:[String,Number]},treeSelectProps:TreeSelectLeafMulitFormItem.props.treeSelectProps,value:TreeSelectLeafMulitFormItem.props.value},data:function(){return{dataSource:[]}},methods:{$loadData:function(e){var t=Dict.value[r].value;t instanceof Function&&t(e).then(function(e){this.dataSource=e})}},watch:{cascadeParams:function(e){this.$loadData(e)}},mounted:function(){var e=Dict.value[r].value;e.then&&e.then(function(e){this.dataSource=e})},render:function(e){return e(TreeSelectLeafMulitFormItem,{props:{treeSelectProps:this.treeSelectProps,value:this.value,dataSource:this.dataSource},attrs:this.$attrs,scopedSlots:this.$scopedSlots,on:this.$listeners},this.$slots.default)}}}),FormItemComponents}
//# sourceMappingURL=TreeSelect.js.map
