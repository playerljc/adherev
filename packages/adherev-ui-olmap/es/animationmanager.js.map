{"version":3,"file":"animationmanager.js","sources":["animationmanager.js"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { __assign } from \"tslib\";\nimport algebra from 'algebra.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport { v1 } from 'uuid';\nimport Util from './util';\n/**\n * AnimationManager\n * @class AnimationManager\n * @classdesc 地图轨迹播放动画\n */\n\nvar AnimationManager =\n/** @class */\nfunction () {\n  // runing: boolean;\n  // vectorSource: any;\n  // animationMap: {};\n  // preAnimations: any[];\n  // pointsMapIndex: any;\n  // preActiveId: string | undefined;\n  // handler: any;\n  // lines: any;\n  // pref: any;\n  // config: {\n  //   arrowImg: '';\n  //   pointImg: '';\n  //   lineWidth: 8,\n  //   lineColor: '#FF5D00',\n  // };\n  function AnimationManager(vectorSource, config) {\n    this.runing = false;\n    this.vectorSource = vectorSource;\n    this.animationMap = [];\n    this.preAnimations = [];\n    this.config = config;\n  }\n\n  AnimationManager.prototype.isRun = function () {\n    return this.runing;\n  };\n\n  AnimationManager.prototype.getPoints = function (locations) {\n    console.log('locations', locations);\n    var distance = 0; // let speed = 0;\n\n    var addPoints = [];\n    this.animationMap = [];\n\n    for (var i = locations.length - 1; i >= 1; i--) {\n      var startPoint = fromLonLat(locations[i]);\n      var endPoint = fromLonLat(locations[i - 1]); // 距离\n\n      var xDistance = Math.abs(startPoint[0] - endPoint[0]);\n      distance += xDistance;\n    }\n\n    var speed = Math.floor(distance / (locations.length * 80));\n\n    if (speed === 0) {\n      speed = 0.01;\n    }\n\n    this.animationMap[0] = locations.length - 1;\n\n    for (var i = locations.length - 1; i >= 1; i--) {\n      var startPoint = fromLonLat(locations[i]);\n      var endPoint = fromLonLat(locations[i - 1]);\n      var xDirection = startPoint[0] < endPoint[0] ? '->' : '<-';\n      var yDirection = startPoint[1] < endPoint[1] ? '->' : '<-'; // 同一个点没有轨迹\n      // eslint-disable-next-line no-continue\n\n      if (startPoint[0] === endPoint[0] && startPoint[1] === endPoint[1]) continue; // 垂直的\n\n      if (startPoint[0] === endPoint[0] && startPoint[1] !== endPoint[1]) {\n        // 距离\n        var xdistance = Math.abs(startPoint[1] - endPoint[1]); // 段数\n\n        var interval = Math.floor(xdistance / speed);\n\n        if (xdistance % speed > 0) {\n          interval += 1;\n        }\n\n        for (var j = 1; j <= interval; j++) {\n          var x = startPoint[0];\n          var y = void 0;\n\n          if (yDirection === '->') {\n            if (j * speed > xdistance) {\n              // eslint-disable-next-line prefer-destructuring\n              x = endPoint[0]; // eslint-disable-next-line prefer-destructuring\n\n              y = endPoint[1];\n            } else {\n              y = startPoint[1] + j * speed;\n            }\n          } else if (yDirection === '<-') {\n            if (j * speed > xdistance) {\n              // eslint-disable-next-line prefer-destructuring\n              x = endPoint[0]; // eslint-disable-next-line prefer-destructuring\n\n              y = endPoint[1];\n            } else {\n              y = startPoint[1] - j * speed;\n            }\n          }\n\n          addPoints.push([x, y]);\n        }\n      } else if (startPoint[0] !== endPoint[0] && startPoint[1] === endPoint[1]) {\n        // 水平的\n        // 距离\n        var xDistance = Math.abs(startPoint[0] - endPoint[0]); // 段数\n\n        var interval = Math.floor(xDistance / speed);\n\n        if (xDistance % speed > 0) {\n          interval += 1;\n        }\n\n        for (var j = 1; j <= interval; j++) {\n          var x = void 0;\n          var y = startPoint[1];\n\n          if (xDirection === '->') {\n            if (j * speed > xDistance) {\n              // eslint-disable-next-line prefer-destructuring\n              x = endPoint[0]; // eslint-disable-next-line prefer-destructuring\n\n              y = endPoint[1];\n            } else {\n              x = startPoint[0] + j * speed;\n            }\n          } else if (xDirection === '<-') {\n            if (j * speed > xDistance) {\n              // eslint-disable-next-line prefer-destructuring\n              x = endPoint[0]; // eslint-disable-next-line prefer-destructuring\n\n              y = endPoint[1];\n            } else {\n              x = startPoint[0] - j * speed;\n            }\n          }\n\n          addPoints.push([x, y]);\n        }\n      } else {\n        // 有角度的\n        // 距离\n        var time = 5 * 30;\n        var xDistance = Math.abs(startPoint[0] - endPoint[0]);\n        speed = xDistance / time; // 段数\n\n        var interval = Math.floor(xDistance / speed);\n\n        if (xDistance % speed > 0) {\n          interval += 1;\n        }\n\n        var Equation = algebra.Equation; //= ======================================\n\n        var x1 = algebra.parse(startPoint[1] + \"=\" + startPoint[0] + \"k+b\");\n        var answer1 = x1.solveFor('k'); // console.log(`k = ${answer1.toString()}`);\n\n        var x2 = algebra.parse(endPoint[1] + \"=\" + endPoint[0] + \"k+b\");\n        var answer2 = x2.solveFor('k'); // console.log(`k = ${answer2.toString()}`);\n        //= ================================================\n        // 解出b值\n\n        var eq = new Equation(answer1, answer2); // console.log(`b表达式：${eq.toString()}`);\n\n        var answerX = eq.solveFor('b'); // console.log(`解出B的值为：${answerX.toString()}`);\n        //= ================================================\n        // 解出Y值（把x的值代入x1或x2）\n\n        eq = x1.eval({\n          b: answerX\n        }); // console.log(`k表达式：${eq.toString()}`);\n\n        var answerY = eq.solveFor('k'); // console.log(`解出k的值为：${answerY.toString()}`);\n        // eslint-disable-next-line no-eval\n\n        var b = eval(answerX.toString()); // eslint-disable-next-line no-eval\n\n        var k = eval(answerY.toString());\n\n        for (var j = 1; j <= interval; j++) {\n          var x = void 0;\n          var y = void 0;\n\n          if (xDirection === '->') {\n            if (j * speed > xDistance) {\n              // eslint-disable-next-line prefer-destructuring\n              x = endPoint[0]; // eslint-disable-next-line prefer-destructuring\n\n              y = endPoint[1];\n            } else {\n              x = startPoint[0] + j * speed;\n              y = k * x + b;\n            }\n          } else if (xDirection === '<-') {\n            if (j * speed > xDistance) {\n              // eslint-disable-next-line prefer-destructuring\n              x = endPoint[0]; // eslint-disable-next-line prefer-destructuring\n\n              y = endPoint[1];\n            } else {\n              x = startPoint[0] - j * speed;\n              y = k * x + b;\n            }\n          }\n\n          addPoints.push([x, y]);\n        }\n      }\n\n      this.animationMap[addPoints.length - 1] = i - 1;\n    }\n\n    return addPoints;\n  }; // eslint-disable-next-line consistent-return\n\n\n  AnimationManager.prototype.run = function (lineData, pointsMapIndex) {\n    var _this = this;\n\n    if (!lineData || this.runing) return false;\n    this.runing = true;\n    this.pointsMapIndex = pointsMapIndex;\n    var it = lineData.values();\n    this.loopTask(it).then(function () {\n      // 所有动画完成\n      _this.runing = false;\n      console.log('finish');\n    });\n  };\n\n  AnimationManager.prototype.loopTask = function (it) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var entry = it.next();\n\n      if (entry.done) {\n        resolve();\n      } else {\n        var lines = entry.value;\n\n        var points = _this.getPoints(lines);\n\n        _this.runTask(points).then(function () {\n          _this.loopTask(it).then(function () {\n            resolve();\n          });\n        }).catch(function (error) {\n          reject(error);\n        });\n      }\n    });\n  };\n\n  AnimationManager.prototype.runTask = function (points) {\n    var _this = this;\n\n    this.preActiveId = ''; // eslint-disable-next-line no-unused-vars,consistent-return\n\n    return new Promise(function (resolve) {\n      var self = _this;\n\n      if (!points.length) {\n        resolve();\n        return false;\n      }\n\n      var topIndex = 0;\n      _this.pref = null;\n      _this.lines = [];\n      _this.handler = null; // eslint-disable-next-line consistent-return\n\n      function loop() {\n        if (topIndex === points.length) {\n          self.stopTask();\n\n          if (self.preAnimations) {\n            self.preAnimations.forEach(function (p) {\n              self.vectorSource.removeFeature(p);\n            });\n            self.preAnimations = [];\n          }\n\n          resolve();\n          return false;\n        }\n\n        if (self.pref) {\n          self.vectorSource.removeFeature(self.pref);\n        }\n\n        var point = points[topIndex];\n        var rotation = 0;\n\n        if (topIndex !== 0) {\n          var line = Util.drawLine({\n            points: [points[topIndex - 1], points[topIndex]],\n            width: self.config.lineWidth,\n            color: self.config.lineColor\n          });\n          self.vectorSource.addFeature(line);\n          self.lines.push(line);\n          var prePoint = points[topIndex - 1];\n          var dx = point[0] - prePoint[0];\n          var dy = point[1] - prePoint[1];\n          rotation = Math.atan2(dy, dx);\n        }\n\n        if (self.animationMap[topIndex] || self.animationMap[topIndex] === 0) {\n          if (self.preActiveId) {\n            var preFeature = self.vectorSource.getFeatureById(self.preActiveId);\n            self.vectorSource.removeFeature(preFeature);\n            self.preActiveId = '';\n          }\n\n          var pointConfig = self.pointsMapIndex[self.animationMap[topIndex]];\n\n          if (pointConfig) {\n            var id = \"active_\" + pointConfig.id;\n            var node = Util.drawImagePoint(__assign(__assign({}, pointConfig), {\n              id: id,\n              src: self.config.pointImg,\n              zIndex: pointConfig.zIndex + 10\n            }));\n            self.vectorSource.addFeature(node);\n            self.preActiveId = id;\n          }\n        }\n\n        var f = Util.drawImagePoint({\n          id: v1(),\n          pos: point,\n          src: self.config.arrowImg,\n          scale: 1,\n          zIndex: 1000,\n          rotation: -rotation\n        });\n        self.vectorSource.addFeature(f);\n        self.pref = f; // eslint-disable-next-line no-plusplus\n\n        ++topIndex;\n        self.handler = requestAnimationFrame(loop);\n      }\n\n      self.handler = requestAnimationFrame(loop);\n    });\n  }; // eslint-disable-next-line consistent-return\n\n\n  AnimationManager.prototype.stopTask = function () {\n    if (!this.runing) return false;\n\n    if (this.handler) {\n      cancelAnimationFrame(this.handler);\n    }\n\n    if (this.pref) {\n      this.vectorSource.removeFeature(this.pref);\n    }\n\n    if (this.lines) {\n      for (var i = 0; i < this.lines.length; i++) {\n        this.vectorSource.removeFeature(this.lines[i]);\n      }\n    }\n\n    if (this.preActiveId) {\n      var preFeature = this.vectorSource.getFeatureById(this.preActiveId);\n      this.vectorSource.removeFeature(preFeature);\n      this.preActiveId = '';\n    }\n  };\n\n  AnimationManager.prototype.stop = function () {\n    this.stopTask();\n    this.runing = false;\n  };\n\n  return AnimationManager;\n}();\n\nexport default AnimationManager;"],"names":["__assign","algebra","fromLonLat","v1","Util","AnimationManager","vectorSource","config","this","runing","animationMap","preAnimations","prototype","isRun","getPoints","locations","console","log","distance","addPoints","i","length","startPoint","endPoint","xDistance","Math","abs","speed","floor","xDirection","yDirection","xdistance","interval","j","x","y","push","time","Equation","x1","parse","answer1","solveFor","x2","answer2","eq","answerX","eval","b","answerY","toString","k","run","lineData","pointsMapIndex","_this","it","values","loopTask","then","Promise","resolve","reject","entry","next","done","lines","value","points","runTask","catch","error","preActiveId","self","topIndex","pref","handler","requestAnimationFrame","loop","stopTask","forEach","p","removeFeature","dy","id","node","point","rotation","line","drawLine","width","lineWidth","color","lineColor","addFeature","prePoint","dx","atan2","preFeature","getFeatureById","pointConfig","drawImagePoint","src","pointImg","zIndex","f","pos","arrowImg","scale","cancelAnimationFrame","stop"],"mappings":"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"}